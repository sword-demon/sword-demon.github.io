import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as c,o,c as l,a as s,b as t,e as a,d as n}from"./app.98dadaaa.js";const i={},d=a(`<h1 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> redis</h1><p><img src="https://virusoss.oss-cn-shanghai.aliyuncs.com/images/20220928222928.png" alt="redisepoll" loading="lazy"></p><blockquote><p><code>redis</code>\u662F\u5355\u7EBF\u7A0B\u7684\uFF0C\u4E00\u5806\u5BA2\u6237\u7AEF\u7684\u94FE\u63A5\u90FD\u662F\u5148\u5230\u5185\u6838\u7684\uFF0C<code>redis</code>\u548C\u5185\u6838\u4E4B\u95F4\u4F7F\u7528<code>epoll</code>\uFF0C\u4E5F\u5C31\u662F\u975E\u963B\u585E\u7684 IO \u591A\u8DEF\u590D\u7528\uFF0C<code>redis</code>\u5C31\u53EF\u4EE5\u7528\u4E00\u4E2A\u7EBF\u7A0B\u4F7F\u7528<code>epoll</code>\u904D\u5386\u5F88\u591A\u5BA2\u6237\u7AEF\u8FDE\u63A5\uFF0C\u54EA\u4E2A\u5BA2\u6237\u7AEF\u6709\u6570\u636E\u5C31\u6765\u5904\u7406\u8C01\uFF0C\u5DE6\u8FB9\u662F IO \u64CD\u4F5C\uFF0C\u53F3\u8FB9\u662F\u5185\u5B58\u64CD\u4F5C\uFF0C\u5185\u5B58\u64CD\u4F5C\u7684\u901F\u5EA6\u662F\u8FDC\u5927\u4E8E IO \u7684\u64CD\u4F5C\u7684\uFF0C\u6240\u4EE5<code>redis</code>\u7EBF\u7A0B\u5BF9\u5E94\u5F88\u591A\u8FDE\u63A5\u662F\u6CA1\u6709\u95EE\u9898\u7684\u3002\u8FD9\u91CC\u7684\u5904\u7406\u7684\u800C\u4E14\u662F<code>redis</code>\u7684<code>worker</code>\u7EBF\u7A0B\uFF0C<code>redis</code>\u8FD8\u6709\u522B\u7684\u7EBF\u7A0B\u53BB\u5904\u7406\u522B\u7684\u4E8B\u60C5\uFF0C\u6BD4\u5982\u6301\u4E45\u5316\u3001\u5F02\u6B65\u5220\u9664\u7B49\u3002</p></blockquote><p><strong>\u57FA\u672C\u6570\u636E\u7ED3\u6784</strong></p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">redisObject</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> type<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> encoding<span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">unsigned</span> lru<span class="token operator">:</span>LRU_BITS<span class="token punctuation">;</span>

    <span class="token keyword">int</span> refcount<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token operator">*</span>ptr<span class="token punctuation">;</span>
<span class="token punctuation">}</span> robj<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>type</code>\uFF1A\u5BF9\u5916\u7684\u6570\u636E\u7C7B\u578B\uFF0C<code>string\u3001hash\u3001list\u3001set\u3001zset</code>\uFF0C\u901A\u8FC7<code>type</code>\u547D\u4EE4\u770B\u5230\u7684\u7C7B\u578B</li><li><code>encoding</code>\u5185\u90E8\u5B9E\u9645\u4FDD\u5B58\u7C7B\u578B\u6570\u636E\u7C7B\u578B\uFF0C\u5F88\u91CD\u8981\uFF0C\u4F8B\u5982<code>list</code>\u5176\u5B9E\u5206\u4E3A<code>ziplist quicklist</code></li><li><code>lru</code>\u7F13\u5B58\u6DD8\u6C70\u673A\u5236\u65F6\u4F7F\u7528</li><li><code>refcount</code>\uFF1A\u5F15\u7528\u8BA1\u6570\uFF0C\u4E3B\u8981\u7528\u4E8E\u5185\u5B58\u56DE\u6536</li><li><code>ptr</code>\uFF1A\u6307\u5411\u771F\u5B9E\u7684\u6570\u636E\u5B58\u50A8</li></ul><h2 id="redis-\u6570\u636E\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#redis-\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a> redis \u6570\u636E\u7C7B\u578B</h2><ul><li>String \u5B57\u7B26\u4E32\uFF1A\u5E95\u5C42\u662F<code>Int</code> \u7B80\u5355\u52A8\u6001\u5B57\u7B26\u4E32<code>sds</code></li><li>Hash \u54C8\u5E0C\uFF1A\u5E95\u5C42\u662F<code>ZipList Hashtable</code></li><li>List \u5217\u8868\uFF1A\u5E95\u5C42\u4E3A<code>Ziplist quicklist</code>\u53CC\u5411\u5FAA\u73AF\u94FE\u8868</li><li>Set \u96C6\u5408\uFF1A\u5E95\u5C42\u4E3A<code>intset hashtable</code></li><li>Zset \u6709\u5E8F\u96C6\u5408\uFF1A\u5E95\u5C42\u4E3A<code>Ziplist skiplist \u8DF3\u8868</code></li></ul><h3 id="string-\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#string-\u5B57\u7B26\u4E32" aria-hidden="true">#</a> String \u5B57\u7B26\u4E32</h3><blockquote><p>Redis \u81EA\u5DF1\u6784\u5EFA\u4E86\u4E00\u4E2A\u7B80\u5355\u52A8\u6001\u5B57\u7B26\u4E32\uFF1A<code>sds</code></p><p><code>sds</code>\u5185\u90E8\u53C8\u53EF\u4EE5\u8F6C\u6362\u4E3A<code>int\u3001embstr\u3001raw</code></p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>set a <span class="token number">1</span>
ok
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>type a
string
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>object encoding a
<span class="token string">&quot;int&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>set b abc
ok
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>type b
string
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>object encoding b
<span class="token string">&quot;embstr&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>set c aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaasdasdsdsdasdasdsaddqwdqwdqwdwqdqwwqwqdqwqdwsadasdasdasdsa
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>type c
string
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>object encoding c
<span class="token string">&quot;raw&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u503C\u4E3A<code>int</code>\u7684\u65F6\u5019\u5185\u90E8\u7F16\u7801\u5C31\u662F<code>int</code></li><li>\u503C\u5C0F\u4E8E\u7B49\u4E8E 44 \u5B57\u8282\u7684\u65F6\u5019\u4E3A<code>embstr</code></li><li>\u5927\u4E8E 44 \u5B57\u8282\u7684\u65F6\u5019\u4E3A<code>raw</code></li></ul><p><code>embstr</code>\uFF1A\u5B58\u50A8\u7ED3\u6784\u662F\u4E00\u5757\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u8BF7\u6C42\u4E00\u6B21\u5C31\u884C\u4E86</p><p><code>raw</code>\uFF1A\u662F\u4E0D\u8FDE\u7EED\u7684\u5185\u5B58\u7A7A\u95F4\uFF0C\u662F\u9700\u8981\u8BF7\u6C42 2 \u6B21</p><p><img src="https://virusoss.oss-cn-shanghai.aliyuncs.com/images/20221005082518.png" alt="struct" loading="lazy"></p><hr><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">sdshdr</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> len<span class="token punctuation">;</span> <span class="token comment">// buf \u4E2D\u5DF2\u7ECF\u4F7F\u7528\u7684\u957F\u5EA6</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> free<span class="token punctuation">;</span> <span class="token comment">// buf \u4E2D\u672A\u4F7F\u7528\u7684\u957F\u5EA6</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u67D4\u6027\u6570\u7EC4 buf</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BBE\u8BA1\u539F\u56E0\uFF1A</p><ul><li>\u6548\u7387\uFF0C\u5B83\u5355\u72EC\u4FDD\u5B58\u4E86\u4F7F\u7528\u7684\u957F\u5EA6\uFF0C\u76F4\u63A5\u4F7F\u7528\u5373\u53EF\uFF0C\u590D\u6742\u5EA6\u4E3A<code>O(1)</code></li><li>\u9632\u6B62\u6570\u636E\u6EA2\u51FA\uFF0CSDS \u662F\u4E8C\u8FDB\u5236\u5B89\u5168\u7684\uFF0C\u901A\u8FC7<code>len</code>\u6765\u5224\u65AD\u662F\u5426\u7ED3\u5C3E\uFF0C\u6765\u8FDB\u884C\u6269\u5145\u7136\u540E\u518D\u6765\u8FDB\u884C\u4FEE\u6539\uFF0C\u4E0D\u4F1A\u50CF string \u4E00\u6837\u5224\u65AD<code>\\0</code>\u662F\u5426\u4E3A\u7ED3\u5C3E</li><li>\u7A7A\u95F4\u9884\u5206\u914D\uFF0C\u4F1A\u5148\u5148\u67E5\u672A\u4F7F\u7528\u7684\u7A7A\u95F4\uFF0C\u6EE1\u8DB3\u5C31\u76F4\u63A5\u4F7F\u7528\uFF0C\u4E0D\u6EE1\u8DB3\u5C31\u518D\u53BB\u6269\u5145\u7A7A\u95F4\uFF0C\u53EF\u4EE5\u6709\u6548\u51CF\u5C11\u5185\u5B58\u5206\u914D\u7684\u6B21\u6570</li><li>\u60F0\u6027\u7A7A\u95F4\u91CA\u653E\uFF0C\u5B57\u7B26\u4E32\u7F29\u77ED\u65F6\uFF0C\u5E76\u4E0D\u4F1A\u7ACB\u5373\u56DE\u6536\u591A\u4F59\u7684\u7A7A\u95F4\uFF0C\u9632\u6B62\u5F53\u91CD\u65B0\u4FEE\u6539\u65F6\u518D\u8FDB\u884C\u9884\u5206\u914D\uFF0C\u5C31\u589E\u52A0\u4E86\u5185\u5B58\u5206\u914D\u7684\u6B21\u6570</li></ul><p>\u67E5\u770B\u6E90\u7801\uFF1A</p><p><code>sds.h</code>\u548C<code>sds.c</code>\u6587\u4EF6</p><p><code>reids</code>\u5728 3 \u7248\u672C\u540E\u9762\u8FDB\u884C\u4E86\u4FEE\u6539</p>`,22),r=n("\u6587\u4EF6\u5730\u5740"),u={href:"https://github.com/redis/redis/blob/unstable/src/sds.h",target:"_blank",rel:"noopener noreferrer"},k=n("https://github.com/redis/redis/blob/unstable/src/sds.h"),m=a(`<div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">typedef</span> <span class="token keyword">char</span> <span class="token operator">*</span>sds<span class="token punctuation">;</span>

<span class="token comment">/* Note: sdshdr5 is never used, we just access the flags byte directly.
 * However is here to document the layout of type 5 SDS strings. */</span>
<span class="token keyword">struct</span> <span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__packed__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">sdshdr5</span> <span class="token punctuation">{</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> flags<span class="token punctuation">;</span> <span class="token comment">/* 3 lsb of type, and 5 msb of string length \u7B2C\u4E09\u4F4D\u4FDD\u5B58\u5934\u90E8\u7C7B\u578B\uFF0C\u9AD85\u4F4D\u4EE3\u8868\u4FDD\u5B58\u5B57\u7B26\u4E32\u7684\u957F\u5EA6 */</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__packed__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">sdshdr8</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint8_t</span> len<span class="token punctuation">;</span> <span class="token comment">/* used \u5DF2\u5B58\u50A8\u7684\u5B57\u7B26\u4E32\u957F\u5EA6 */</span>
    <span class="token class-name">uint8_t</span> alloc<span class="token punctuation">;</span> <span class="token comment">/* excluding the header and null terminator \u80FD\u5B58\u50A8\u7684\u5B57\u7B26\u4E32\u7684\u6700\u5927\u5BB9\u91CF */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> flags<span class="token punctuation">;</span> <span class="token comment">/* 3 lsb of type, 5 unused bits */</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5B58\u50A8\u5B57\u7B26\u4E32\u7684\u6570\u7EC4</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__packed__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">sdshdr16</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint16_t</span> len<span class="token punctuation">;</span> <span class="token comment">/* used */</span>
    <span class="token class-name">uint16_t</span> alloc<span class="token punctuation">;</span> <span class="token comment">/* excluding the header and null terminator */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> flags<span class="token punctuation">;</span> <span class="token comment">/* 3 lsb of type, 5 unused bits */</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__packed__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">sdshdr32</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint32_t</span> len<span class="token punctuation">;</span> <span class="token comment">/* used */</span>
    <span class="token class-name">uint32_t</span> alloc<span class="token punctuation">;</span> <span class="token comment">/* excluding the header and null terminator */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> flags<span class="token punctuation">;</span> <span class="token comment">/* 3 lsb of type, 5 unused bits */</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token keyword">__attribute__</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>__packed__<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name">sdshdr64</span> <span class="token punctuation">{</span>
    <span class="token class-name">uint64_t</span> len<span class="token punctuation">;</span> <span class="token comment">/* used */</span>
    <span class="token class-name">uint64_t</span> alloc<span class="token punctuation">;</span> <span class="token comment">/* excluding the header and null terminator */</span>
    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> flags<span class="token punctuation">;</span> <span class="token comment">/* 3 lsb of type, 5 unused bits */</span>
    <span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BBE\u8BA1\u6839\u672C\uFF1A\u9488\u5BF9\u4E0D\u540C\u5927\u5C0F\u7684\u6570\u636E\u4FDD\u5B58\u4E3A\u4E0D\u540C\u7684\u7C7B\u578B\uFF0C\u4E3A\u4E86\u8282\u7701\u5185\u5B58\u7A7A\u95F4\u3002</p>`,2),v=n("\u6E90\u7801\u5730\u5740\uFF1A"),b={href:"https://github.com/redis/redis/blob/unstable/src/sds.c",target:"_blank",rel:"noopener noreferrer"},_=n("https://github.com/redis/redis/blob/unstable/src/sds.c"),h=a(`<p>redis \u4F1A\u5BF9\u5B57\u7B26\u4E32\u957F\u5EA6\u8FDB\u884C\u5224\u65AD\uFF0C\u6839\u636E\u957F\u5EA6\u7684\u4E0D\u540C\u9009\u62E9\u4E0D\u540C\u7684\u7ED3\u6784\uFF0C\u5176\u4E2D<code>embstr</code>\u5BF9\u5E94\u7684\u5C31\u662F<code>SDS_TYPE_8</code>\uFF0C\u800C<code>raw</code>\u5219\u4EE3\u8868\u5176\u4ED6\u66F4\u5927\u7684\u6570\u636E\u7C7B\u578B\u3002</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">inline</span> <span class="token keyword">char</span> <span class="token function">sdsReqType</span><span class="token punctuation">(</span><span class="token class-name">size_t</span> string_size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>string_size <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> SDS_TYPE_5<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>string_size <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">8</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> SDS_TYPE_8<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>string_size <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">16</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> SDS_TYPE_16<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token punctuation">(</span>LONG_MAX <span class="token operator">==</span> LLONG_MAX<span class="token punctuation">)</span></span></span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>string_size <span class="token operator">&lt;</span> <span class="token number">1ll</span><span class="token operator">&lt;&lt;</span><span class="token number">32</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> SDS_TYPE_32<span class="token punctuation">;</span>
    <span class="token keyword">return</span> SDS_TYPE_64<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
    <span class="token keyword">return</span> SDS_TYPE_32<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function g(y,w){const e=c("ExternalLinkIcon");return o(),l("div",null,[d,s("p",null,[r,s("a",u,[k,t(e)])]),m,s("p",null,[v,s("a",b,[_,t(e)])]),h])}var q=p(i,[["render",g],["__file","redis-cache-struct.html.vue"]]);export{q as default};
