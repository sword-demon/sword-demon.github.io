import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as p}from"./app.92349b0a.js";const t={},e=p(`<h2 id="tcp-\u670D\u52A1\u7AEF\u4F7F\u7528-select-\u652F\u6301\u591A\u8DEF\u590D\u7528" tabindex="-1"><a class="header-anchor" href="#tcp-\u670D\u52A1\u7AEF\u4F7F\u7528-select-\u652F\u6301\u591A\u8DEF\u590D\u7528" aria-hidden="true">#</a> TCP \u670D\u52A1\u7AEF\u4F7F\u7528 select \u652F\u6301\u591A\u8DEF\u590D\u7528</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token comment">// \u521B\u5EFA\u5957\u63A5\u5B57</span>
<span class="token variable">$socket</span> <span class="token operator">=</span> <span class="token function">socket_create</span><span class="token punctuation">(</span><span class="token constant">AF_INET</span><span class="token punctuation">,</span> <span class="token constant">SOCK_STREAM</span><span class="token punctuation">,</span> <span class="token constant">SOL_TCP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BBE\u7F6E ip \u88AB\u91CA\u653E\u540E\u7ACB\u5373\u53EF\u4F7F\u7528</span>
<span class="token function">socket_set_option</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token constant">SOL_SOCKET</span><span class="token punctuation">,</span> <span class="token constant">SO_REUSEADDR</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED1\u5B9Aip\u4E0E\u7AEF\u53E3</span>
<span class="token function">socket_bind</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F00\u59CB\u76D1\u542C</span>
<span class="token function">socket_listen</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B58\u50A8\u591A\u4E2A\u8FDE\u63A5\u5957\u63A5\u5B57</span>
<span class="token variable">$sockets</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$socket</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$tmp_sockets</span> <span class="token operator">=</span> <span class="token variable">$sockets</span><span class="token punctuation">;</span>
    <span class="token function">socket_select</span><span class="token punctuation">(</span><span class="token variable">$tmp_sockets</span><span class="token punctuation">,</span> <span class="token variable">$write</span><span class="token punctuation">,</span> <span class="token variable">$except</span><span class="token punctuation">,</span> <span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$tmp_sockets</span> <span class="token keyword">as</span> <span class="token variable">$sock</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u5957\u63A5\u5B57\u7B49\u4E8E socket_create \u521B\u5EFA\u7684\u5957\u63A5\u5B57\uFF0C\u8BF4\u660E\u662F\u6709\u65B0\u7684\u8FDE\u63A5\u6216\u6709\u65B0\u7684\u65AD\u5F00\u8FDE\u63A5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$sock</span> <span class="token operator">==</span> <span class="token variable">$socket</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$conn_sock</span> <span class="token operator">=</span> <span class="token function">socket_accept</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$sockets</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$conn_sock</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5426\u5219\u8BF4\u660E\u662F\u4E4B\u524D\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\u53D1\u6765\u6D88\u606F</span>
            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token function">socket_read</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token number">10240</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$msg</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&lt;h1&gt;this is php worker\u4E0D\u77E5\u9053\u80FD\u4E0D\u80FD\u663E\u793A\u4E2D\u6587&lt;/h1&gt;&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">doEncoding</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$output</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;content-type: text/html\\r\\n&quot;</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;server: php socket\\r\\n&quot;</span><span class="token punctuation">;</span>
            <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;Content-Length: <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$len</span><span class="token punctuation">}</span></span>\\r\\n\\r\\n&quot;</span><span class="token punctuation">;</span>

            <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token variable">$output</span><span class="token punctuation">;</span>

            <span class="token function">socket_write</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * @Desc: \u7F16\u7801\u8F6C\u6362
 * <span class="token keyword">@param</span> <span class="token parameter">$str</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 * <span class="token keyword">@author</span>: Administrator - virus
 * @Time: 2022/6/23 9:59
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">doEncoding</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$encode</span> <span class="token operator">=</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token function">mb_detect_encoding</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;ASCII&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;UTF-8&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;GB2312&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;GBK&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;BIG5&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$encode</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;UTF-8&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">mb_convert_encoding</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;UTF-8&#39;</span><span class="token punctuation">,</span> <span class="token variable">$encode</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$str</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tcp-websocket" tabindex="-1"><a class="header-anchor" href="#tcp-websocket" aria-hidden="true">#</a> TCP WebSocket</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$socket</span> <span class="token operator">=</span> <span class="token function">socket_create</span><span class="token punctuation">(</span><span class="token constant">AF_INET</span><span class="token punctuation">,</span> <span class="token constant">SOCK_STREAM</span><span class="token punctuation">,</span> <span class="token constant">SOL_TCP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">socket_set_option</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token constant">SOL_SOCKET</span><span class="token punctuation">,</span> <span class="token constant">SO_REUSEADDR</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">socket_bind</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8888</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">socket_listen</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$conn_sock</span> <span class="token operator">=</span> <span class="token function">socket_accept</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$request</span> <span class="token operator">=</span> <span class="token function">socket_read</span><span class="token punctuation">(</span><span class="token variable">$conn_sock</span><span class="token punctuation">,</span> <span class="token number">102400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$new_key</span> <span class="token operator">=</span> <span class="token function">getShaKey</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$response</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;HTTP/1.1 101 Switching Protocols\\r\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;Upgrade: websocket\\r\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;Sec-WebSocket-Version: 13\\r\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;Connection: Upgrade\\r\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;Sec-WebSocket-Accept: <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$new_key</span><span class="token punctuation">}</span></span>\\r\\n\\r\\n&quot;</span><span class="token punctuation">;</span>

    <span class="token comment">// \u53D1\u9001\u63E1\u624B\u6570\u636E</span>
    <span class="token function">socket_write</span><span class="token punctuation">(</span><span class="token variable">$conn_sock</span><span class="token punctuation">,</span> <span class="token variable">$response</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u65B0\u589E\u5185\u5BB9\uFF0C\u83B7\u53D6\u5BA2\u6237\u7AEF\u53D1\u9001\u7684\u6D88\u606F\u5E76\u8F6C\u4E3A\u5927\u5199\u8FD8\u7ED9\u5BA2\u6237\u7AEF</span>
    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token function">socket_read</span><span class="token punctuation">(</span><span class="token variable">$conn_sock</span><span class="token punctuation">,</span> <span class="token number">102400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">socket_write</span><span class="token punctuation">(</span><span class="token variable">$conn_sock</span><span class="token punctuation">,</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">getShaKey</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6 Sec-WebSocket-key</span>
    <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;/Sec-WebSocket-Key: (.*)\\r\\n/&quot;</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u62FC\u63A5 key + 258EAFA5-E914-47DA-95CA-C5AB0DC85B11</span>
    <span class="token variable">$new_key</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$match</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&#39;</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5BF9\u5B57\u7B26\u4E32\u505A \`SHA1\` \u8BA1\u7B97\uFF0C\u518D\u628A\u5F97\u5230\u7684\u7ED3\u679C\u901A\u8FC7 \`base64\` \u52A0\u5BC6</span>
    <span class="token keyword">return</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$new_key</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * @Desc: websocket \u89E3\u5BC6\u5185\u5BB9
 * <span class="token keyword">@param</span> <span class="token parameter">$buffer</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">int</span></span>
 * <span class="token keyword">@author</span>: Administrator - virus
 * @Time: 2022/6/23 10:39
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">decode</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>ord</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">127</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$len</span> <span class="token operator">===</span> <span class="token number">126</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$masks</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$len</span> <span class="token operator">===</span> <span class="token number">127</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$masks</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token variable">$masks</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$dataLength</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>strlen</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$masks</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>str_repeat</span><span class="token punctuation">(</span><span class="token variable">$masks</span><span class="token punctuation">,</span> <span class="token function"><span class="token punctuation">\\</span>floor</span><span class="token punctuation">(</span><span class="token variable">$dataLength</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>substr</span><span class="token punctuation">(</span><span class="token variable">$masks</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$dataLength</span> <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token variable">$data</span> <span class="token operator">^</span> <span class="token variable">$masks</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * @Desc: websocket \u52A0\u5BC6\u5185\u5BB9
 * <span class="token keyword">@param</span> <span class="token parameter">$buffer</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">string</span></span>
 * <span class="token keyword">@throws</span> <span class="token class-name">Exception</span>
 * <span class="token keyword">@author</span>: Administrator - virus
 * @Time: 2022/6/23 10:39
 */</span>
<span class="token keyword">function</span> <span class="token function-definition function">encode</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_scalar</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Exception</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;You can&#39;t send(&quot;</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>gettype</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;) to client, you need to convert it to a string. &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token function"><span class="token punctuation">\\</span>strlen</span><span class="token punctuation">(</span><span class="token variable">$buffer</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$first_byte</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;\\x81&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$len</span> <span class="token operator">&lt;=</span> <span class="token number">125</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$encode_buffer</span> <span class="token operator">=</span> <span class="token variable">$first_byte</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>chr</span><span class="token punctuation">(</span><span class="token variable">$len</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$buffer</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$len</span> <span class="token operator">&lt;=</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token variable">$encode_buffer</span> <span class="token operator">=</span> <span class="token variable">$first_byte</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>chr</span><span class="token punctuation">(</span><span class="token number">126</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>pack</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;n&quot;</span><span class="token punctuation">,</span> <span class="token variable">$len</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$buffer</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token variable">$encode_buffer</span> <span class="token operator">=</span> <span class="token variable">$first_byte</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>chr</span><span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token function"><span class="token punctuation">\\</span>pack</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;xxxxN&quot;</span><span class="token punctuation">,</span> <span class="token variable">$len</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token variable">$buffer</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token variable">$encode_buffer</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","socket-base.html.vue"]]);export{r as default};
