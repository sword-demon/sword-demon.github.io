import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.85c7af13.js";const p={},e=t(`<h2 id="unix-tcp" tabindex="-1"><a class="header-anchor" href="#unix-tcp" aria-hidden="true">#</a> UNIX TCP</h2><blockquote><p>UNIX \u901A\u4FE1\u57DF TCP \u5957\u63A5\u5B57</p></blockquote><p>\u670D\u52A1\u7AEF</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>


<span class="token variable">$socket</span> <span class="token operator">=</span> <span class="token function">socket_create</span><span class="token punctuation">(</span><span class="token constant">AF_UNIX</span><span class="token punctuation">,</span> <span class="token constant">SOCK_STREAM</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">socket_bind</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;unix.sock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">socket_listen</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token function">socket_accept</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_resource</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;new recv from&quot;</span> <span class="token operator">.</span> <span class="token function">socket_read</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;write len:&quot;</span> <span class="token operator">.</span> <span class="token function">socket_write</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;hello&quot;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">socket_close</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">socket_close</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>


<span class="token variable">$socket</span> <span class="token operator">=</span> <span class="token function">socket_create</span><span class="token punctuation">(</span><span class="token constant">AF_UNIX</span><span class="token punctuation">,</span> <span class="token constant">SOCK_STREAM</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">socket_connect</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;unix.sock&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;connect ok!\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;send:&quot;</span> <span class="token operator">.</span> <span class="token function">socket_write</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;client&quot;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;recv:&quot;</span> <span class="token operator">.</span> <span class="token function">socket_read</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">socket_close</span><span class="token punctuation">(</span><span class="token variable">$socket</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php unix_server.php</span>
new recv fromclient
<span class="token function">write</span> len:5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php unix_client.php</span>
connect ok<span class="token operator">!</span>
send:6recv:hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u8C03\u7528\u5B8C\u4E86\uFF0C\u4F1A\u751F\u6210\u4E00\u4E2A\u6587\u4EF6<code>unix.sock</code>\uFF0C\u4E0B\u6B21\u518D\u6B21\u8FD0\u884C\u5C31\u4F1A\u8FDB\u884C\u62A5\u9519\uFF0C\u56E0\u4E3A\u5B83\u5DF2\u7ECF\u5B58\u5728\u4E86\uFF0C\u6240\u4EE5\u4E0B\u6B21\u6211\u4EEC\u8FD0\u884C\u7684\u65F6\u5019\u9700\u8981\u5C06\u5B83\u5220\u9664\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">rm</span> -rf unix.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>strace -f -s 6550 php unix_client.php</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&lt;?php<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span><span class="token variable">$socket</span> = socket_create(AF_UNIX, SOCK_STREAM, 0);<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>if (socket_connect(<span class="token variable">$socket</span>, <span class="token entity" title="\\&quot;">\\&quot;</span>unix.sock<span class="token entity" title="\\&quot;">\\&quot;</span>)) {<span class="token entity" title="\\n">\\n</span>    fprintf(STDOUT, <span class="token entity" title="\\&quot;">\\&quot;</span>connect ok!<span class="token entity" title="\\\\">\\\\</span>r<span class="token entity" title="\\\\">\\\\</span>n<span class="token entity" title="\\&quot;">\\&quot;</span>);<span class="token entity" title="\\n">\\n</span>    echo <span class="token entity" title="\\&quot;">\\&quot;</span>send:<span class="token entity" title="\\&quot;">\\&quot;</span> . socket_write(<span class="token variable">$socket</span>, <span class="token entity" title="\\&quot;">\\&quot;</span>client<span class="token entity" title="\\&quot;">\\&quot;</span>, 6);<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>    echo <span class="token entity" title="\\&quot;">\\&quot;</span>recv:<span class="token entity" title="\\&quot;">\\&quot;</span> . socket_read(<span class="token variable">$socket</span>, 128);<span class="token entity" title="\\n">\\n</span>}<span class="token entity" title="\\n">\\n</span><span class="token entity" title="\\n">\\n</span>socket_close(<span class="token variable">$socket</span>);&quot;</span>, <span class="token number">4096</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">270</span>
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
munmap<span class="token punctuation">(</span>0x7f3254f9c000, <span class="token number">4096</span><span class="token punctuation">)</span>            <span class="token operator">=</span> <span class="token number">0</span>
socket<span class="token punctuation">(</span>AF_UNIX, SOCK_STREAM, <span class="token number">0</span><span class="token punctuation">)</span>         <span class="token operator">=</span> <span class="token number">3</span>
connect<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token punctuation">{</span>sa_family<span class="token operator">=</span>AF_UNIX, <span class="token assign-left variable">sun_path</span><span class="token operator">=</span><span class="token string">&quot;unix.sock&quot;</span><span class="token punctuation">}</span>, <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;connect ok!<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\n">\\n</span>&quot;</span>, 13connect ok<span class="token operator">!</span>
<span class="token punctuation">)</span>         <span class="token operator">=</span> <span class="token number">13</span>
write<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;client&quot;</span>, <span class="token number">6</span><span class="token punctuation">)</span>                   <span class="token operator">=</span> <span class="token number">6</span>
write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;send:6&quot;</span>, 6send:6<span class="token punctuation">)</span>                   <span class="token operator">=</span> <span class="token number">6</span>
recvfrom<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;hello&quot;</span>, <span class="token number">128</span>, <span class="token number">0</span>, NULL, NULL<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">5</span>
write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;recv:hello&quot;</span>, 10recv:hello<span class="token punctuation">)</span>              <span class="token operator">=</span> <span class="token number">10</span>
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
close<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u4E00\u4E9B\u5E95\u5C42\u4F7F\u7528\u7684\u51FD\u6570\u548C\u8C03\u7528\u7684\u65B9\u6CD5\u3002</p><h2 id="unix-udp" tabindex="-1"><a class="header-anchor" href="#unix-udp" aria-hidden="true">#</a> UNIX UDP</h2><p>unix \u57DF\u6709 2 \u79CD\u5957\u63A5\u5B57\uFF1ATCP \u548C UDP</p><p>\u547D\u540D UNIX\uFF0C\u9700\u8981\u7ED1\u5B9A\u5730\u5740</p><p>\u670D\u52A1\u7AEF</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$unix_sock</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;udp.sock&quot;</span><span class="token punctuation">;</span>

<span class="token variable">$sock</span> <span class="token operator">=</span> <span class="token function">socket_create</span><span class="token punctuation">(</span><span class="token constant">AF_UNIX</span><span class="token punctuation">,</span> <span class="token constant">SOCK_DGRAM</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">socket_bind</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$unix_sock</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;bind error:%s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">socket_strerror</span><span class="token punctuation">(</span><span class="token function">socket_last_error</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">socket_recvfrom</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$buf</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$unixFile</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;data :%s, file :%s\\n&quot;</span><span class="token punctuation">,</span> <span class="token variable">$buf</span><span class="token punctuation">,</span> <span class="token variable">$unixFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">socket_sendto</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$buf</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$buf</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$unixFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">socket_close</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$server_unix_sock</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;udp.sock&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$client_unix_sock</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;udp1.sock&quot;</span><span class="token punctuation">;</span>

<span class="token variable">$sock</span> <span class="token operator">=</span> <span class="token function">socket_create</span><span class="token punctuation">(</span><span class="token constant">AF_UNIX</span><span class="token punctuation">,</span> <span class="token constant">SOCK_DGRAM</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7ED1\u5B9A\u5BA2\u6237\u7AEF\u7684\u6587\u4EF6</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">socket_bind</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$client_unix_sock</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;bind error:%s\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">socket_strerror</span><span class="token punctuation">(</span><span class="token function">socket_last_error</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">echo</span> <span class="token function">socket_sendto</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$server_unix_sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token function">socket_recvfrom</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">,</span> <span class="token variable">$buf</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$unixFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">STDOUT</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;data :%s, file :%s\\n&quot;</span><span class="token punctuation">,</span> <span class="token variable">$buf</span><span class="token punctuation">,</span> <span class="token variable">$unixFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">socket_close</span><span class="token punctuation">(</span><span class="token variable">$sock</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php unix_udp_server.php</span>
data :test, <span class="token function">file</span> :udp1.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php unix_udp_client.php</span>
44data :test, <span class="token function">file</span> :udp.sock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,23),o=[e];function c(l,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","unix-socket.html.vue"]]);export{r as default};
