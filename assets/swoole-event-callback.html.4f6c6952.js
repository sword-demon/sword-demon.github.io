import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as p,c as o,a as n,b as c,d as s,e as l}from"./app.92349b0a.js";const i={},u=n("h1",{id:"swoole-\u4E8B\u4EF6\u56DE\u8C03",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#swoole-\u4E8B\u4EF6\u56DE\u8C03","aria-hidden":"true"},"#"),s(" Swoole \u4E8B\u4EF6\u56DE\u8C03")],-1),r=n("p",null,[n("code",null,"Swoole\\Server"),s("\u662F\u4E8B\u4EF6\u9A71\u52A8\u6A21\u5F0F\uFF0C\u6240\u6709\u7684\u4E1A\u52A1\u903B\u8F91\u4EE3\u7801\u5FC5\u987B\u5199\u5728\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u4E2D\u3002\u5F53\u7279\u5B9A\u7684\u7F51\u7EDC\u4E8B\u4EF6\u53D1\u751F\u540E\uFF0C\u5E95\u5C42\u4F1A\u4E3B\u52A8\u56DE\u8C03\u6307\u5B9A\u7684"),n("code",null,"PHP"),s("\u51FD\u6570\u3002")],-1),k=n("h2",{id:"\u4E8B\u4EF6\u6267\u884C\u987A\u5E8F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u4E8B\u4EF6\u6267\u884C\u987A\u5E8F","aria-hidden":"true"},"#"),s(" \u4E8B\u4EF6\u6267\u884C\u987A\u5E8F")],-1),d=s("\u6587\u6863\u5730\u5740\uFF1A"),v={href:"https://wiki.swoole.com/#/server/events?id=%e4%ba%8b%e4%bb%b6",target:"_blank",rel:"noopener noreferrer"},m=s("https://wiki.swoole.com/#/server/events?id=%e4%ba%8b%e4%bb%b6"),b=l(`<ul><li>\u6240\u6709\u4E8B\u4EF6\u56DE\u8C03\u5747\u5728<code>Server start</code>\u540E\u53D1\u751F</li><li>\u670D\u52A1\u5668\u5173\u95ED\u7EC8\u6B62\u65F6\u6700\u540E\u4E00\u6B21\u4E8B\u4EF6\u662F<code>onShutdown</code></li><li>\u670D\u52A1\u5668\u542F\u52A8\u6210\u529F\u540E\uFF0C<code>onStart/onManagerStart/onWorkerStart</code>\u4F1A\u5E76\u53D1\u6267\u884C</li><li><code>onReceive/onConnect/onClose</code>\u5728<code>worker</code>\u8FDB\u7A0B\u4E2D\u89E6\u53D1</li><li><code>Worker/Task</code>\u8FDB\u7A0B\u542F\u52A8\u548C\u7ED3\u675F\u4F1A\u5206\u522B\u8C03\u7528<code>onWorkerStart/onWorkerStop</code>\uFF1B<code>onTask</code>\u4E8B\u4EF6\u4EC5\u5728<code>task</code>\u8FDB\u7A0B\u4E2D\u53D1\u751F\uFF0C<code>onFinish</code>\u4E8B\u4EF6\u4EC5\u5728<code>worker</code>\u8FDB\u7A0B\u4E2D\u53D1\u751F\u3002</li></ul><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$serv</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified">Swoole<span class="token punctuation">\\</span>Server</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> <span class="token number">9506</span><span class="token punctuation">,</span> <span class="token constant">SWOOLE_PROCESS</span><span class="token punctuation">,</span> <span class="token constant">SWOOLE_SOCK_TCP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;worker_num&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Start&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ManagerStart&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u89E6\u53D1\u65F6\u8BF4\u660E task \u548C worker \u8FDB\u7A0B\u5DF2\u521B\u5EFA\uFF0Cmaster \u72B6\u6001\u4E0D\u660E\uFF0Cmanager \u4E0E master \u662F\u5E76\u884C\u7684</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;WorkerStart&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$workerId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FDB\u7A0B\u5168\u5C40\u671F</span>
    <span class="token comment">// \u5B50\u8FDB\u7A0B\u5B58\u8D27\u5468\u671F\u4E4B\u5185\uFF0C\u662F\u5E38\u9A7B\u5185\u5B58\u7684\uFF0C\u8FDB\u7A0B\u671F include \u7684\u6587\u4EF6\u5728 reload \u4E4B\u540E\u5C31\u4F1A\u91CD\u65B0\u52A0\u8F7D</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ManagerStop&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u89E6\u53D1\u65F6\u8BF4\u660E task \u548C worker \u8FDB\u7A0B\u5DF2\u7ED3\u675F\u8FD0\u884C\uFF0C\u5DF2\u88AB manager \u8FDB\u7A0B\u56DE\u6536</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;WorkerStop&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$workerId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;worker stop\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// worker/task \u8FDB\u7A0B\u53D1\u751F\u5F02\u5E38\u540E\u4F1A\u5728 manager \u8FDB\u7A0B\u4E2D\u56DE\u8C03</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;WorkerError&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$workerId</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$workerPid</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$exitCode</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$sign</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7528\u4E8E\u62A5\u8B66\u548C\u76D1\u63A7\uFF0C\u9047\u5230\u8FDB\u7A0B\u5F02\u5E38\u9000\u51FA\u63D0\u793A\u5F00\u53D1\u8005\u8FDB\u884C\u5904\u7406</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u9645\u5F00\u542F reload_async \u4E4B\u540E\uFF0C\u6740\u6B7B worker \u8FDB\u7A0B\u5E76\u4E0D\u4F1A\u56DE\u8C03\u8F93\u51FA</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;WorkerExit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$workerId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;worker exit\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Connect&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$fd</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$reactorId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;onConnect\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 3. \u4F1A\u8BDD\u671F</span>
    <span class="token comment">// \u4F1A\u8BDD\u671F\u662F\u5728 onConnect \u540E\u521B\u5EFA\uFF0C\u6216\u8005\u5728\u7B2C\u4E00\u6B21 onReceive \u65F6\u521B\u5EFA\uFF0ConClose \u65F6\u9500\u6BC1</span>
    <span class="token comment">// \u4E00\u4E2A\u5BA2\u6237\u7AEF\u8FDE\u63A5\u8FDB\u5165\u540E\uFF0C\u521B\u5EFA\u7684\u5BF9\u8C61\u4F1A\u5E38\u9A7B\u5185\u5B58\uFF0C\u76F4\u5230\u6B64\u5BA2\u6237\u7AEF\u79BB\u5F00\u624D\u4F1A\u9500\u6BC1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u751F\u5728 worker \u8FDB\u7A0B\u4E2D</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Receive&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$fd</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$reactorId</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;onReceive\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 4. \u8BF7\u6C42\u671F\u95F4</span>
    <span class="token comment">// onReceive \u6536\u5230\u8BF7\u6C42\u5F00\u59CB\u5904\u7406\u8BF7\u6C42\uFF0C\u76F4\u5230\u8FD4\u56DE\u7ED3\u679C\u53D1\u9001 response \u5468\u671F\u5185\u521B\u5EFA\u7684\u5BF9\u8C61\u5728\u8BF7\u6C42\u5B8C\u6210\u540E\u9500\u6BC1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u751F\u5728 worker \u8FDB\u7A0B\u4E2D</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$fd</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$reactorId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// tcp \u5BA2\u6237\u7AEF\u8FDE\u63A5\u5173\u95ED\u540E\uFF0Cworker \u8FDB\u7A0B\u4E2D\u56DE\u8C03</span>
    <span class="token comment">// \u670D\u52A1\u5668\u4E3B\u52A8\u5173\u95ED\u65F6\uFF0CreactorId \u4F1A\u8BBE\u4E3A-1 \u53EF\u4EE5\u901A\u8FC7\u5224\u65AD &lt; 0 \u5206\u8FA8\u5173\u95ED\u662F\u7531\u54EA\u4E00\u7AEF\u53D1\u8D77</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;onClose\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u53D1\u751F\u5728 worker \u8FDB\u7A0B\u4E2D</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Packet&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token keyword type-hint">array</span> <span class="token variable">$clientInfo</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u63A5\u6536\u5230 UDP \u6570\u636E\u5305\u65F6\u56DE\u8C03\u6B64\u51FD\u6570</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;onPacket\\n&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Http Server \u4E0D\u63A5\u53D7 onConnect\u3001onReceive \u4E8B\u4EF6\u56DE\u8C03\uFF0C\u53D6\u800C\u4EE3\u4E4B\u7684\u662F onRequest\u4E8B\u4EF6\u7C7B\u578B</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Request&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration">Swoole<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Request</span> <span class="token variable">$request</span><span class="token punctuation">,</span> <span class="token class-name class-name-fully-qualified type-declaration">Swoole<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Response</span> <span class="token variable">$response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 4. \u8BF7\u6C42\u671F</span>
    <span class="token comment">// \u4F7F\u7528\u643A\u7A0B\u540E\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u5C06\u4F1A\u5E76\u53D1\u5730\u6267\u884C</span>
    <span class="token comment">// \u643A\u7A0B\u662F\u4E00\u79CD\u7528\u6237\u6001\u7EBF\u7A0B\u5B9E\u73B0\uFF0C\u6CA1\u6709\u989D\u5916\u7684\u8C03\u5EA6\u6D88\u8017\uFF0C\u4EC5\u5360\u7528\u5185\u5B58</span>
    <span class="token comment">// \u4F7F\u7528\u643A\u7A0B\u6A21\u5F0F\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A&quot;\u6BCF\u6B21\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\u53BB\u6267\u884C\uFF0C\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u7EBF\u7A0B\u9000\u51FA&quot;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">server</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;path_info&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;/favicon.ico&#39;</span> <span class="token operator">||</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">server</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;request_uri&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;/favicon.ico&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">get</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token property">post</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Content-Type&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;text/html; charset=utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$response</span><span class="token operator">-&gt;</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;h1&gt;Hello Swoole. #&#39;</span> <span class="token operator">.</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/h1&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// worker/task\u8FDB\u7A0B\u6536\u5230\u7531 sendMessage \u53D1\u751F\u7684\u7BA1\u9053\u6D88\u606F\u65F6\u4F1A\u89E6\u53D1</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;PipeMessage&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$srcWorkerId</span><span class="token punctuation">,</span> <span class="token variable">$message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4EC5\u5728 task \u8FDB\u7A0B\u4E2D\u53D1\u751F</span>
<span class="token comment">// v4.2.12\u8D77\uFF0C\u5982\u679C\u5F00\u542F task_enable_coroutine \u5219\u56DE\u8C03\u51FD\u6570\u539F\u578B\u662F</span>
<span class="token comment">//function (\\Swoole\\Server $server, \\Swoole\\Server\\Task $task) {</span>
<span class="token comment">//    $task-&gt;worker_id, $task-&gt;id, $task-&gt;flags, $task-&gt;data, $task-&gt;finish([123, &#39;hello&#39;]);</span>
<span class="token comment">//}</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Task&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$taskId</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$srcWorkerId</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// $taskID \u548C $srcWorkerId \u7EC4\u5408\u8D77\u6765\u624D\u662F\u5168\u5C40\u552F\u4E00\u7684</span>
    <span class="token comment">// \u53EF\u4EE5\u901A\u8FC7 $server-&gt;finish($response) \u6216\u8005  return &#39;&#39; \u6765\u89E6\u53D1 onFinish \u4E8B\u4EF6</span>
    <span class="token comment">// \u5982\u679C worker \u4E0D\u5173\u5FC3\u4EFB\u52A1\u6267\u884C\u7ED3\u679C\uFF0C\u4E0D\u9700\u8981 return \u6216 finish</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4EC5\u5728 worker \u8FDB\u7A0B\u4E2D\u53D1\u751F</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Finish&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">,</span> <span class="token keyword type-hint">int</span> <span class="token variable">$taskId</span><span class="token punctuation">,</span> <span class="token keyword type-hint">string</span> <span class="token variable">$data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8C03\u7528\u4E8B\u4EF6\u524D\uFF0C\u5E95\u5C42\u5DF2\u9500\u6BC1\u6240\u6709\u8FDB\u7A0B\u3001\u7EBF\u7A0B\u3001\u76D1\u542C\u7AEF\u53E3</span>
<span class="token comment">// \u5F3A\u5236 kill \u548C ctrl + c \u8FDB\u7A0B\u4E0D\u4F1A\u56DE\u8C03\uFF0C\u9700\u8981 kill -TERM</span>
<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Shutdown&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified type-declaration"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Server</span> <span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$serv</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function g(y,w){const a=e("ExternalLinkIcon");return p(),o("div",null,[u,r,k,n("p",null,[d,n("a",v,[m,c(a)])]),b])}var q=t(i,[["render",g],["__file","swoole-event-callback.html.vue"]]);export{q as default};
