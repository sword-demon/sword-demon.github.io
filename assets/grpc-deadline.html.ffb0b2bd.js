import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.b055366b.js";const t={},p=e(`<h1 id="grpc-\u7684\u8D85\u65F6\u673A\u5236" tabindex="-1"><a class="header-anchor" href="#grpc-\u7684\u8D85\u65F6\u673A\u5236" aria-hidden="true">#</a> gRPC \u7684\u8D85\u65F6\u673A\u5236</h1><p>\u4F7F\u7528<code>context</code>\u5305\u81EA\u5E26\u7684<code>WithTimeout</code>\u51FD\u6570\u8FDB\u884C\u8BBE\u7F6E\u8D85\u65F6\u65F6\u95F4</p><p>\u5BA2\u6237\u7AEF</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	conn<span class="token punctuation">,</span> err <span class="token operator">:=</span> grpc<span class="token punctuation">.</span><span class="token function">Dial</span><span class="token punctuation">(</span><span class="token string">&quot;127.0.0.1:50052&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>conn <span class="token operator">*</span>grpc<span class="token punctuation">.</span>ClientConn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		err <span class="token operator">:=</span> conn<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>

	c <span class="token operator">:=</span> pb<span class="token punctuation">.</span><span class="token function">NewGreeterClient</span><span class="token punctuation">(</span>conn<span class="token punctuation">)</span>
    <span class="token comment">// \u8BBE\u7F6E 3 \u79D2</span>
	ctx<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>Second<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">)</span>

	r<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">SayHello</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>pb<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">{</span>
		Name<span class="token punctuation">:</span> <span class="token string">&quot;virus&quot;</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>Message<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u670D\u52A1\u7AEF</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>Server<span class="token punctuation">)</span> <span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> request <span class="token operator">*</span>proto<span class="token punctuation">.</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>proto<span class="token punctuation">.</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5EF6\u8FDF 5 \u79D2\uFF0C\u80AF\u5B9A\u4F1A\u8D85\u65F6</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>proto<span class="token punctuation">.</span>HelloReply<span class="token punctuation">{</span>Message<span class="token punctuation">:</span> <span class="token string">&quot;hello &quot;</span> <span class="token operator">+</span> request<span class="token punctuation">.</span>Name<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4F1A\u6709\u4E00\u4E2A\u9519\u8BEF\u4FE1\u606F\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>context deadline exceeded
DeadlineExceed <span class="token comment"># gRPC \u7684\u4E00\u4E2A\u72B6\u6001\u7801</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="protobuf-\u751F\u6210\u7684\u6E90\u7801\u5185\u5BB9\u6709\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#protobuf-\u751F\u6210\u7684\u6E90\u7801\u5185\u5BB9\u6709\u4EC0\u4E48" aria-hidden="true">#</a> protobuf \u751F\u6210\u7684\u6E90\u7801\u5185\u5BB9\u6709\u4EC0\u4E48</h1><p><code>proto</code>\u6587\u4EF6</p><div class="language-protobuf ext-protobuf line-numbers-mode"><pre class="language-protobuf"><code><span class="token keyword">syntax</span> <span class="token operator">=</span> <span class="token string">&quot;proto3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">option</span> go_package <span class="token operator">=</span> <span class="token string">&quot;.;proto&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">service</span> <span class="token class-name">Greeter</span> <span class="token punctuation">{</span>
  <span class="token keyword">rpc</span> <span class="token function">SayHello</span><span class="token punctuation">(</span><span class="token class-name">HelloRequest</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token punctuation">(</span><span class="token class-name">HelloReply</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">message</span> <span class="token class-name">HelloRequest</span> <span class="token punctuation">{</span>
  <span class="token builtin">string</span> name <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">message</span> <span class="token class-name">HelloReply</span> <span class="token punctuation">{</span>
  <span class="token builtin">string</span> message <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u751F\u6210\u7684\u7ED3\u6784\u4F53</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> HelloRequest <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	state         protoimpl<span class="token punctuation">.</span>MessageState
	sizeCache     protoimpl<span class="token punctuation">.</span>SizeCache
	unknownFields protoimpl<span class="token punctuation">.</span>UnknownFields

	Name <span class="token builtin">string</span> <span class="token string">\`protobuf:&quot;bytes,1,opt,name=name,proto3&quot; json:&quot;name,omitempty&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> HelloReply <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	state         protoimpl<span class="token punctuation">.</span>MessageState
	sizeCache     protoimpl<span class="token punctuation">.</span>SizeCache
	unknownFields protoimpl<span class="token punctuation">.</span>UnknownFields

	Message <span class="token builtin">string</span> <span class="token string">\`protobuf:&quot;bytes,1,opt,name=message,proto3&quot; json:&quot;message,omitempty&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token comment">// GreeterClient is the client API for Greeter service.</span>
<span class="token comment">//</span>
<span class="token comment">// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.</span>
<span class="token keyword">type</span> GreeterClient <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">SayHello</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> in <span class="token operator">*</span>HelloRequest<span class="token punctuation">,</span> opts <span class="token operator">...</span>grpc<span class="token punctuation">.</span>CallOption<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// GreeterServer is the server API for Greeter service.</span>
<span class="token keyword">type</span> GreeterServer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">SayHello</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> <span class="token operator">*</span>HelloRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>HelloReply<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">RegisterGreeterServer</span><span class="token punctuation">(</span>s <span class="token operator">*</span>grpc<span class="token punctuation">.</span>Server<span class="token punctuation">,</span> srv GreeterServer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s<span class="token punctuation">.</span><span class="token function">RegisterService</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>_Greeter_serviceDesc<span class="token punctuation">,</span> srv<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>\u751F\u6210\u5BF9\u5E94\u7684\u63A5\u53E3</li><li>\u5C06\u8FD9\u4E9B\u65B9\u6CD5\u6CE8\u518C\u5230<code>gRPC</code></li><li>\u670D\u52A1\u7AEF\u662F\u751F\u6210\u63A5\u53E3\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u53BB\u6BCF\u4E2A\u63A5\u53E3\u4E2D\u5B9E\u73B0\u5BF9\u5E94\u7684\u4E1A\u52A1\u903B\u8F91</li><li>\u5BA2\u6237\u7AEF\u9700\u8981\u5E2E\u6211\u4EEC\u751F\u6210\u5BF9\u5E94\u7684\u65B9\u6CD5\uFF0C\u540C\u65F6\u5C06\u8FD9\u4E2A\u65B9\u6CD5\u7ED1\u5B9A\u5230\u4E00\u4E2A\u7ED3\u6784\u4F53\u4E0A\uFF0C\u751F\u6210\u7684\u65F6\u5019\u53EF\u80FD\u9700\u8981\u4F20\u9012\u53C2\u6570</li></ol>`,14),o=[p];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","grpc-deadline.html.vue"]]);export{k as default};
