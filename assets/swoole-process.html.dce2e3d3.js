import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as p,e as t,d as s}from"./app.762d7d6b.js";const i={},u=t(`<h1 id="swoole-\u8FDB\u7A0B\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#swoole-\u8FDB\u7A0B\u57FA\u7840" aria-hidden="true">#</a> swoole \u8FDB\u7A0B\u57FA\u7840</h1><h2 id="\u8BA4\u8BC6\u8FDB\u7A0B\u548C\u8BBE\u7F6E\u8FDB\u7A0B\u540D\u79F0" tabindex="-1"><a class="header-anchor" href="#\u8BA4\u8BC6\u8FDB\u7A0B\u548C\u8BBE\u7F6E\u8FDB\u7A0B\u540D\u79F0" aria-hidden="true">#</a> \u8BA4\u8BC6\u8FDB\u7A0B\u548C\u8BBE\u7F6E\u8FDB\u7A0B\u540D\u79F0</h2><p>\u5728<code>php-cli</code>\u6A21\u5F0F\u8FD0\u884C\u4E0B\uFF0C\u5982\u679C\u6CA1\u6709\u8BBE\u7F6E\u6B7B\u5FAA\u73AF\uFF0C\u5BF9\u5E94\u7684\u4EE3\u7801\u6267\u884C\u5B8C\u8FDB\u7A0B\u5C31\u7ED3\u675F\u4E86\u3002\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u52A0\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u77ED\u6682\u67E5\u770B\u4E00\u4E0B\u8FDB\u7A0B\u7684\u4FE1\u606F\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">13965</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep php</span>
root     <span class="token number">13965</span> <span class="token number">11931</span>  <span class="token number">0</span> <span class="token number">15</span>:04 pts/1    00:00:00 php c1.php
root     <span class="token number">14065</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:04 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto php

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>ps</code>\u547D\u4EE4\u4E5F\u53EF\u4EE5\u770B\u5230\u5BF9\u5E94\u7684\u8FDB\u7A0B\u5B58\u5728\uFF0C\u8FDB\u7A0B<code>pid</code>\u5C31\u662F<code>13965</code>\uFF0C\u8FDB\u7A0B\u540D\u79F0\u5C31\u662F\u5B83\u6267\u884C\u7684\u540D\u79F0\uFF1A<code>php c1.php</code>\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u5BF9\u5B83\u8FDB\u884C\u6539\u540D\u79F0\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528<code>php</code>\u5185\u7F6E\u7684\u8BBE\u7F6E\u8FDB\u7A0B\u540D\u79F0\u7684\u51FD\u6570\uFF0C\u867D\u7136<code>swoole</code>\u4E5F\u6709</p>`,9),r=n("code",null,"php",-1),k=s("\u5185\u7F6E\u51FD\u6570\u6587\u6863\u5730\u5740\uFF1A"),d={href:"https://www.php.net/manual/zh/function.cli-set-process-title.php",target:"_blank",rel:"noopener noreferrer"},v=s("https://www.php.net/manual/zh/function.cli-set-process-title.php"),m=n("code",null,"swoole",-1),b=s("\u8BBE\u7F6E\u8FDB\u7A0B\u540D\u79F0\u7684\u6587\u6863\u5730\u5740\uFF1A"),g={href:"https://wiki.swoole.com/#/functions?id=swoole_set_process_name",target:"_blank",rel:"noopener noreferrer"},h=s("https://wiki.swoole.com/#/functions?id=swoole_set_process_name"),_={class:"custom-container danger"},w=n("p",{class:"custom-container-title"},"\u6CE8\u610F",-1),f=n("code",null,"swoole",-1),q=s("\u6587\u6863\u8BF4\u6B64\u51FD\u6570\u4E0E PHP5.5 \u63D0\u4F9B\u7684 "),y={href:"https://www.php.net/manual/zh/function.cli-set-process-title.php",target:"_blank",rel:"noopener noreferrer"},$=s("cli_set_process_title"),P=s(" \u529F\u80FD\u662F\u76F8\u540C\u7684\u3002\u4F46 "),x=n("code",null,"swoole_set_process_name",-1),I=s(" \u53EF\u7528\u4E8E PHP5.2 \u4E4B\u4E0A\u7684\u4EFB\u610F\u7248\u672C\u3002"),L=n("code",null,"swoole_set_process_name",-1),D=s(" \u517C\u5BB9\u6027\u6BD4 "),S=n("code",null,"cli_set_process_title",-1),E=s(" \u8981\u5DEE\uFF0C\u5982\u679C\u5B58\u5728 "),H=n("code",null,"cli_set_process_title",-1),M=s(" \u51FD\u6570\u5219\u4F18\u5148\u4F7F\u7528 "),A=n("code",null,"cli_set_process_title",-1),O=s("\u3002"),C=t(`<p>\u6240\u4EE5\u6211\u4EEC\u4E00\u822C\u8FD8\u662F\u4F7F\u7528<code>php</code>\u5185\u7F6E\u7684\u51FD\u6570<code>cli_set_process_title</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">14988</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep my_process</span>
root     <span class="token number">14988</span> <span class="token number">11931</span>  <span class="token number">0</span> <span class="token number">15</span>:08 pts/1    00:00:00 my_process
root     <span class="token number">15020</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:08 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto my_process
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684<code>11931</code>\u662F\u5B83\u5BF9\u5E94\u7684\u7236\u8FDB\u7A0B\uFF0C\u5C31\u662F\u8FD9\u4E2A\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u7684\u7EC8\u7AEF<code>bash</code>\u7684\u8FDB\u7A0B</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep 11931</span>
root     <span class="token number">11931</span> <span class="token number">11785</span>  <span class="token number">0</span> <span class="token number">14</span>:55 pts/1    00:00:00 -bash
root     <span class="token number">14988</span> <span class="token number">11931</span>  <span class="token number">0</span> <span class="token number">15</span>:08 pts/1    00:00:00 my_process
root     <span class="token number">15348</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:09 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto <span class="token number">11931</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8FC7\u6709\u7684\u65F6\u5019\u4E5F\u4E0D\u4E00\u5B9A\u662F<code>bash</code>\u6709\u7684\u65F6\u5019\u4F7F\u7528<code>docker</code>\u73AF\u5883\u7684\u8BDD\uFF0C\u8FDB\u5165\u7684\u7EC8\u7AEF\u8BBE\u5907\u53EF\u80FD\u662F<code>sh</code>\uFF0C\u4E0D\u8FC7\u8FD9\u4E2A\u770B\u60C5\u51B5\u53EF\u4EE5\u81EA\u5DF1\u770B\u5230\u3002</p><h2 id="\u521B\u5EFA\u5B50\u8FDB\u7A0B\u3001\u83B7\u53D6\u5B50\u8FDB\u7A0B-pid-\u548C\u56DE\u6536\u5B50\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5B50\u8FDB\u7A0B\u3001\u83B7\u53D6\u5B50\u8FDB\u7A0B-pid-\u548C\u56DE\u6536\u5B50\u8FDB\u7A0B" aria-hidden="true">#</a> \u521B\u5EFA\u5B50\u8FDB\u7A0B\u3001\u83B7\u53D6\u5B50\u8FDB\u7A0B PID \u548C\u56DE\u6536\u5B50\u8FDB\u7A0B</h2>`,7),T=n("code",null,"swoole",-1),j=s("\u6587\u6863\u5730\u5740\uFF1A"),R={href:"https://wiki.swoole.com/#/process/process?id=process",target:"_blank",rel:"noopener noreferrer"},V=s("https://wiki.swoole.com/#/process/process?id=process"),Q=t(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_process&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, PID=&quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B7B\u5FAA\u73AF\uFF1A\u4E3B\u8FDB\u7A0B\u80AF\u5B9A\u4E0D\u4F1A\u9000\u51FA\u7684</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">17924</span>
\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token number">17925</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep my_process</span>
root     <span class="token number">17924</span> <span class="token number">11931</span>  <span class="token number">0</span> <span class="token number">15</span>:20 pts/1    00:00:00 my_process
root     <span class="token number">17980</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:20 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto my_process
<span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep php</span>
root     <span class="token number">17925</span> <span class="token number">17924</span>  <span class="token number">0</span> <span class="token number">15</span>:20 pts/1    00:00:00 <span class="token punctuation">[</span>php<span class="token punctuation">]</span> <span class="token operator">&lt;</span>defunct<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A\u67E5\u770B\u4E3B\u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C\u7B2C\u4E8C\u4E2A\u67E5\u770B\u5B50\u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C<code>[php] &lt;defunct&gt;</code>\u8FD9\u4E2A\u5B50\u8FDB\u7A0B\u5DF2\u7ECF\u53D8\u6210\u4E86\u50F5\u5C38\u8FDB\u7A0B\uFF0C\u56E0\u4E3A\u5728\u4E0A\u9762\u4EE3\u7801\u91CC\uFF0C\u4E00\u53E5\u8BDD\u5C31\u6267\u884C\u5B8C\u6210\u4E86\uFF0C\u6CA1\u6709\u8FDB\u884C\u56DE\u6536\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528<code>Process::wait()</code>\u51FD\u6570\u53BB\u56DE\u6536\u7ED3\u675F\u8FD0\u884C\u7684\u5B50\u8FDB\u7A0B\u3002</p><p>\u4EE3\u7801\u6539\u8FDB</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, PID=&quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B7B\u5FAA\u73AF\uFF1A\u4E3B\u8FDB\u7A0B\u80AF\u5B9A\u4E0D\u4F1A\u9000\u51FA\u7684</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u518D\u6B21\u8FD0\u884C\u7684\u65F6\u5019\uFF0C\u4F60\u662F\u770B\u4E0D\u5230\u5B50\u8FDB\u7A0B\u7684\u4FE1\u606F\u4E86\uFF0C\u56E0\u4E3A\u5DF2\u7ECF\u8FD0\u884C\u7ED3\u675F\u88AB\u4E3B\u8FDB\u7A0B\u56DE\u6536\u6389\u4E86\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">18905</span>
\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token number">18906</span>


<span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep my_process</span>
root     <span class="token number">18931</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:24 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto my_process
<span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep php</span>
root     <span class="token number">18975</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:24 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto php

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\u7236\u8FDB\u7A0B\u4F9D\u7136\u662F\u53EF\u4EE5\u770B\u5230\u7684\u3002</p><hr><p>\u5982\u679C\u60F3\u770B\u5230\u5B50\u8FDB\u7A0B\u7684\u6D88\u606F\uFF0C\u6211\u4EEC\u8FD8\u662F\u5199\u4E00\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u8BA9\u5B50\u8FDB\u7A0B\u4E0D\u9000\u51FA\u5373\u53EF\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FDB\u7A0B\u521B\u5EFA\u6210\u529F\u4F1A\u6267\u884C\u91CC\u9762\u7684\u56DE\u8C03\u51FD\u6570</span>
<span class="token variable">$child</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, PID=&quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u8BA9\u8FDB\u7A0B\u4E0D\u9000\u51FA</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B7B\u5FAA\u73AF\uFF1A\u4E3B\u8FDB\u7A0B\u80AF\u5B9A\u4E0D\u4F1A\u9000\u51FA\u7684</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">19599</span>
\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, <span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token number">19600</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep my_child</span>
root     <span class="token number">19600</span> <span class="token number">19599</span>  <span class="token number">0</span> <span class="token number">15</span>:26 pts/1    00:00:00 my_child
root     <span class="token number">19726</span> <span class="token number">12165</span>  <span class="token number">0</span> <span class="token number">15</span>:27 pts/2    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto my_child

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u53EF\u4EE5\u770B\u5230\u5B50\u8FDB\u7A0B<code>my_child</code>\u7684\u7236 PID<code>19599</code>\u5C31\u662F\u4E0A\u9762\u8F93\u51FA\u7684\u4E3B\u8FDB\u7A0B\u7684 PID\u3002</p><h2 id="\u91CD\u5B9A\u5411\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA-\u7236\u8FDB\u7A0B\u83B7\u53D6\u5B50\u8FDB\u7A0B\u7684\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u91CD\u5B9A\u5411\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA-\u7236\u8FDB\u7A0B\u83B7\u53D6\u5B50\u8FDB\u7A0B\u7684\u6570\u636E" aria-hidden="true">#</a> \u91CD\u5B9A\u5411\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u8F93\u51FA\uFF0C\u7236\u8FDB\u7A0B\u83B7\u53D6\u5B50\u8FDB\u7A0B\u7684\u6570\u636E</h2><p>\u8FD9\u4E00\u6B65\u9700\u8981\u4F7F\u7528\u5230<code>swoole</code>\u7684<code>Process</code>\u7C7B\u7684\u6784\u9020\u65B9\u6CD5\u91CC\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</p>`,17),G=n("strong",null,[n("code",null,"bool $redirect_stdin_stdout")],-1),B=n("strong",null,"\u529F\u80FD",-1),N=s("\uFF1A\u91CD\u5B9A\u5411\u5B50\u8FDB\u7A0B\u7684\u6807\u51C6\u8F93\u5165\u548C\u8F93\u51FA\u3002\u3010\u542F\u7528\u6B64\u9009\u9879\u540E\uFF0C\u5728\u5B50\u8FDB\u7A0B\u5185\u8F93\u51FA\u5185\u5BB9\u5C06\u4E0D\u662F\u6253\u5370\u5C4F\u5E55\uFF0C\u800C\u662F\u5199\u5165\u5230\u4E3B\u8FDB\u7A0B\u7BA1\u9053\u3002\u8BFB\u53D6\u952E\u76D8\u8F93\u5165\u5C06\u53D8\u4E3A\u4ECE\u7BA1\u9053\u4E2D\u8BFB\u53D6\u6570\u636E\u3002\u9ED8\u8BA4\u4E3A\u963B\u585E\u8BFB\u53D6\u3002\u53C2\u8003 "),F={href:"https://wiki.swoole.com/#/process/process?id=exec",target:"_blank",rel:"noopener noreferrer"},U=s("exec()"),z=s(" \u65B9\u6CD5\u5185\u5BB9\u3011"),Y=n("li",null,[n("strong",null,"\u9ED8\u8BA4\u503C"),s("\uFF1A\u65E0")],-1),K=n("li",null,[n("strong",null,"\u5176\u5B83\u503C"),s("\uFF1A\u65E0")],-1),J=t(`<p>\u53EF\u4EE5\u5728\u4E3B\u8FDB\u7A0B\u91CC\u4F7F\u7528\u5BF9\u5E94\u7684<code>read</code>\u65B9\u6CD5\u5230\u4E3B\u8FDB\u7A0B\u7684\u7BA1\u9053\u5185\u8FDB\u884C\u8BFB\u53D6\u6570\u636E\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;my name is: &quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5199\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u8BA9\u8FDB\u7A0B\u4E0D\u9000\u51FA</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\u65E0\u89E3&quot;</span><span class="token punctuation">;</span>

<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B7B\u5FAA\u73AF\uFF1A\u4E3B\u8FDB\u7A0B\u80AF\u5B9A\u4E0D\u4F1A\u9000\u51FA\u7684</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">22878</span>
my name is: \u65E0\u89E3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u628A\u8F93\u51FA\u5185\u5BB9\u653E\u5230\u5FAA\u73AF\u91CC\u53BB\u8F93\u51FA\uFF0C\u4E0B\u9762<code>read</code>\u53EA\u80FD\u83B7\u53D6\u5230\u4E00\u6B21</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//    echo &quot;\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, PID=&quot;.posix_getpid().PHP_EOL;</span>
    <span class="token comment">// \u5199\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u8BA9\u8FDB\u7A0B\u4E0D\u9000\u51FA</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;my name is: &quot;</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\u65E0\u89E3&quot;</span><span class="token punctuation">;</span>

<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B7B\u5FAA\u73AF\uFF1A\u4E3B\u8FDB\u7A0B\u80AF\u5B9A\u4E0D\u4F1A\u9000\u51FA\u7684</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">23014</span>
my name is: \u65E0\u89E3

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5C06\u8BFB\u53D6\u5185\u5BB9\u653E\u5230<code>wait</code>\u4E0B\u65B9\uFF0C\u90A3\u5C31\u4EC0\u4E48\u5185\u5BB9\u90FD\u8BFB\u53D6\u4E0D\u5230</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\u65E0\u89E3&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),W=s("\u53EF\u4EE5\u67E5\u770B\u6211\u4EEC\u7684"),X=n("code",null,"wait",-1),Z=s("\u6587\u6863\uFF1A"),nn={href:"https://wiki.swoole.com/#/process/process?id=wait",target:"_blank",rel:"noopener noreferrer"},sn=s("https://wiki.swoole.com/#/process/process?id=wait"),an=t(`<p><code>wait</code>\u51FD\u6570\u53C2\u6570\uFF1A<code>Swoole\\Process::wait(bool $blocking = true): array|false</code>\uFF0C\u9ED8\u8BA4\u662F\u963B\u585E\u7684\uFF0C\u6CE8\u610F\u6587\u6863\u7684\u63D0\u793A\u5185\u5BB9</p><blockquote><p>\u6BCF\u4E2A\u5B50\u8FDB\u7A0B\u7ED3\u675F\u540E\uFF0C\u7236\u8FDB\u7A0B\u5FC5\u987B\u90FD\u8981\u6267\u884C\u4E00\u6B21 <code>wait()</code> \u8FDB\u884C\u56DE\u6536\uFF0C\u5426\u5219\u5B50\u8FDB\u7A0B\u4F1A\u53D8\u6210\u50F5\u5C38\u8FDB\u7A0B\uFF0C\u4F1A\u6D6A\u8D39\u64CD\u4F5C\u7CFB\u7EDF\u7684\u8FDB\u7A0B\u8D44\u6E90\u3002 \u5982\u679C\u7236\u8FDB\u7A0B\u6709\u5176\u4ED6\u4EFB\u52A1\u8981\u505A\uFF0C\u6CA1\u6CD5\u963B\u585E <code>wait</code> \u5728\u90A3\u91CC\uFF0C\u7236\u8FDB\u7A0B\u5FC5\u987B\u6CE8\u518C\u4FE1\u53F7 <code>SIGCHLD</code> \u5BF9\u9000\u51FA\u7684\u8FDB\u7A0B\u6267\u884C <code>wait</code>\u3002 SIGCHILD \u4FE1\u53F7\u53D1\u751F\u65F6\u53EF\u80FD\u540C\u65F6\u6709\u591A\u4E2A\u5B50\u8FDB\u7A0B\u9000\u51FA\uFF1B\u5FC5\u987B\u5C06 <code>wait()</code> \u8BBE\u7F6E\u4E3A\u975E\u963B\u585E\uFF0C\u5FAA\u73AF\u6267\u884C <code>wait</code> \u76F4\u5230\u8FD4\u56DE <code>false</code>\u3002</p></blockquote><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//    echo &quot;\u6211\u662F\u4E00\u4E2A\u5B50\u8FDB\u7A0B, PID=&quot;.posix_getpid().PHP_EOL;</span>
    <span class="token comment">// \u5199\u4E2A\u6B7B\u5FAA\u73AF\uFF0C\u8BA9\u8FDB\u7A0B\u4E0D\u9000\u51FA</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;my name is: &quot;</span><span class="token punctuation">;</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B7B\u5FAA\u73AF\uFF1A\u4E3B\u8FDB\u7A0B\u80AF\u5B9A\u4E0D\u4F1A\u9000\u51FA\u7684</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$child</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\u65E0\u89E3&quot;</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BFB\u53D6\u4EE3\u7801\u653E\u5230<code>wait</code>\u4E0A\u65B9\u662F\u65E0\u6240\u8C13\u7684\uFF0C\u6B64\u65F6\u5C06<code>wait</code>\u65B9\u6CD5\u8BBE\u7F6E\u4E3A\u4E0D\u963B\u585E\uFF0C\u653E\u5230\u4E0B\u65B9\u4F1A\u63A5\u6536\u5230\u4E00\u4E2A\u503C\uFF0C\u5982\u679C\u653E\u5230\u5FAA\u73AF\u91CC\uFF0C\u5219\u4F1A\u4E0D\u65AD\u7684\u8BFB\u53D6\u6570\u636E\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">23990</span>
my name is: \u65E0\u89E3
my name is: \u65E0\u89E3
my name is: \u65E0\u89E3
^C

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u591A\u4E2A\u5B50\u8FDB\u7A0B\u7684\u56DE\u6536\u4EE5\u53CA\u4FE1\u53F7\u5165\u95E8" tabindex="-1"><a class="header-anchor" href="#\u591A\u4E2A\u5B50\u8FDB\u7A0B\u7684\u56DE\u6536\u4EE5\u53CA\u4FE1\u53F7\u5165\u95E8" aria-hidden="true">#</a> \u591A\u4E2A\u5B50\u8FDB\u7A0B\u7684\u56DE\u6536\u4EE5\u53CA\u4FE1\u53F7\u5165\u95E8</h2><blockquote><p>SIGCHILD \u4FE1\u53F7\u53D1\u751F\u65F6\u53EF\u80FD\u540C\u65F6\u6709\u591A\u4E2A\u5B50\u8FDB\u7A0B\u9000\u51FA\uFF1B\u5FC5\u987B\u5C06 <code>wait()</code> \u8BBE\u7F6E\u4E3A\u975E\u963B\u585E\uFF0C\u5FAA\u73AF\u6267\u884C <code>wait</code> \u76F4\u5230\u8FD4\u56DE <code>false</code>\u3002</p></blockquote><p>\u7B80\u5355\u9020 2 \u4E2A\u5B50\u8FDB\u7A0B\u8FDB\u884C\u8FD0\u884C\uFF0C\u7B2C\u4E8C\u4E2A\u5B50\u8FDB\u7A0B\u6CA1\u6709\u8BBE\u7F6E\u6B7B\u5FAA\u73AF\uFF0C\u8FD0\u884C\u540E\u4F1A\u76F4\u63A5\u7ED3\u675F\uFF0C\u76F4\u63A5\u7ED3\u675F\uFF0C\u4F1A\u5BFC\u81F4\u4E3B\u8FDB\u7A0B\u7684\u9000\u51FA\uFF0C\u6240\u4EE5\u7B2C\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u5C31\u4F1A\u53D8\u6210\u50F5\u5C38\u8FDB\u7A0B\uFF0C\u7236\u8FDB\u7A0B\u5C31\u6210\u4E86\u7CFB\u7EDF\u7684\u8FDB\u7A0B ID \u4E3A 0</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">26098</span>

<span class="token comment"># \u4E3B\u8FDB\u7A0B\u8FD0\u884C\u5B8C\u6709\u5B50\u8FDB\u7A0B\u9000\u51FA\u5BFC\u81F4\u7236\u8FDB\u7A0B\u4E5F\u76F4\u63A5\u9000\u51FA</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef</span>
<span class="token environment constant">UID</span>        PID  <span class="token environment constant">PPID</span>  C STIME TTY          TIME CMD
root     <span class="token number">26099</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">15</span>:53 pts/1    00:00:00 my_child1
root     <span class="token number">26214</span> <span class="token number">26040</span>  <span class="token number">0</span> <span class="token number">15</span>:53 pts/2    00:00:00 <span class="token function">ps</span> -ef

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u89E3\u51B3\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u5F0F" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u5F0F</h3>`,12),pn=t(`<li><p>\u5FAA\u73AF\u5904\u7406</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u591A\u5C11\u4E2A\u5B50\u8FDB\u7A0B\u5C31\u591A\u5C11\u6B21\u5FAA\u73AF\u53BB\u56DE\u6536\u5B50\u8FDB\u7A0B</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),tn=t(`<p>\u4F7F\u7528<code>swoole</code>\u6587\u6863\u63D0\u4F9B\u7684\u4FE1\u53F7\u8FDB\u884C\u5904\u7406</p><p>\u6587\u6863\u793A\u4F8B\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token class-name class-name-fully-qualified static-context">Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context">Swoole<span class="token punctuation">\\</span>Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;PID=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$ret</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;pid&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4FE1\u53F7\u6700\u7B80\u5355\u7684\u4F8B\u5B50\uFF1A\u5C31\u662F\u6211\u4EEC\u4E0D\u662F\u5B88\u62A4\u8FDB\u7A0B\u8FD0\u884C\u7684\u7A0B\u5E8F\u6B7B\u5FAA\u73AF\u4E00\u76F4\u8FD0\u884C\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u6309\u4E0B<code>ctrl + c</code>\u5C31\u53EF\u4EE5\u505C\u6B62\u8FDB\u7A0B\uFF1B\u8FD9\u5C31\u662F\u4FE1\u53F7\u3002</p><blockquote><p>\u4FE1\u53F7\u662F\u8FDB\u7A0B\u95F4\u901A\u4FE1\u673A\u5236\u4E2D\u552F\u4E00\u7684\u5F02\u6B65\u901A\u4FE1\u673A\u5236\uFF0C\u4E00\u4E2A\u8FDB\u7A0B\u4E0D\u5FC5\u901A\u8FC7\u4EFB\u4F55\u64CD\u4F5C\u6765\u7B49\u5F85\u4FE1\u53F7\u7684\u5230\u8FBE\uFF0C\u4E8B\u5B9E\u4E0A\uFF0C\u8FDB\u7A0B\u4E5F\u4E0D\u77E5\u9053\u4FE1\u53F7\u5230\u5E95\u4EC0\u4E48\u65F6\u5019\u5230\u8FBE\u3002\u8FDB\u7A0B\u4E4B\u95F4\u53EF\u4EE5\u4E92\u76F8\u901A\u8FC7\u7CFB\u7EDF\u8C03\u7528<code>kill</code>\u53D1\u9001\u8F6F\u4E2D\u65AD\u4FE1\u53F7\u3002</p></blockquote>`,5),en=s("Linux \u4FE1\u53F7\u5217\u8868\uFF1A"),on={href:"https://wiki.swoole.com/#/other/signal",target:"_blank",rel:"noopener noreferrer"},cn=s("https://wiki.swoole.com/#/other/signal"),ln=t(`<p><code>ctrl + c </code>\u5BF9\u5E94\u4E86\u4FE1\u53F7\u503C\u4E3A 2\uFF0C\u5373\u6765\u81EA\u952E\u76D8\u7684\u4E2D\u65AD\u4FE1\u53F7\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u5B50\u8FDB\u7A0B 2 \u53EF\u80FD\u4F1A\u9000\u51FA\u7684\u6BD4\u8F83\u5FEB\uFF0C\u53EF\u80FD\u770B\u4E0D\u5230\u6253\u5370\u7684\u5185\u5BB9\u3002</p>`,3),un=n("h2",{id:"\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C-httpserver-\u5E76\u4FEE\u6539\u5BF9\u5E94\u7684\u8FDB\u7A0B\u540D\u79F0",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C-httpserver-\u5E76\u4FEE\u6539\u5BF9\u5E94\u7684\u8FDB\u7A0B\u540D\u79F0","aria-hidden":"true"},"#"),s(" \u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C httpserver \u5E76\u4FEE\u6539\u5BF9\u5E94\u7684\u8FDB\u7A0B\u540D\u79F0")],-1),rn=n("code",null,"swoole",-1),kn=s("\u6587\u6863\u5730\u5740\uFF1A"),dn={href:"https://wiki.swoole.com/#/http_server",target:"_blank",rel:"noopener noreferrer"},vn=s("https://wiki.swoole.com/#/http_server"),mn=s("\u670D\u52A1\u7AEF\u4E8B\u4EF6"),bn={href:"https://wiki.swoole.com/#/server/events",target:"_blank",rel:"noopener noreferrer"},gn=s("https://wiki.swoole.com/#/server/events"),hn=t(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span><span class="token operator">.</span><span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$http</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Swoole<span class="token punctuation">\\</span>Http<span class="token punctuation">\\</span>Server</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;0.0.0.0&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;8081&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$http</span><span class="token operator">-&gt;</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;worker_num&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 1\u4E2A\u8FDB\u7A0B</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$http</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$req</span><span class="token punctuation">,</span> <span class="token variable">$resp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$resp</span><span class="token operator">-&gt;</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;myhttp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$http</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;start&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_master&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$http</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;managerstart&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_managerstart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$http</span><span class="token operator">-&gt;</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;workerstart&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$server</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_workerstart&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$http</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">6300</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep my_</span>
root      <span class="token number">5994</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">18</span>:56 pts/1    00:00:00 my_workerstart
root      <span class="token number">6301</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">18</span>:58 pts/1    00:00:00 my_master
root      <span class="token number">6302</span>  <span class="token number">6301</span>  <span class="token number">0</span> <span class="token number">18</span>:58 pts/1    00:00:00 my_managerstart
root      <span class="token number">6309</span>  <span class="token number">6302</span>  <span class="token number">0</span> <span class="token number">18</span>:58 pts/1    00:00:00 my_workerstart
root      <span class="token number">6398</span>  <span class="token number">5905</span>  <span class="token number">0</span> <span class="token number">18</span>:58 pts/0    00:00:00 <span class="token function">grep</span> --color<span class="token operator">=</span>auto my_

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u573A\u666F\u7EC3\u4E60-\u76D1\u63A7\u6587\u4EF6\u53D8\u52A8" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F\u7EC3\u4E60-\u76D1\u63A7\u6587\u4EF6\u53D8\u52A8" aria-hidden="true">#</a> \u573A\u666F\u7EC3\u4E60\uFF1A\u76D1\u63A7\u6587\u4EF6\u53D8\u52A8</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span> <span class="token operator">.</span> <span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$watchFile</span> <span class="token operator">=</span> <span class="token constant">__DIR__</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;/tmp/db.conf&#39;</span><span class="token punctuation">;</span>
    <span class="token variable">$watchFile_md5</span> <span class="token operator">=</span> <span class="token function">md5_file</span><span class="token punctuation">(</span><span class="token variable">$watchFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8BA1\u7B97\u6587\u4EF6\u7684MD5\u503C</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$getMd5File</span> <span class="token operator">=</span> <span class="token function">md5_file</span><span class="token punctuation">(</span><span class="token variable">$watchFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strcmp</span><span class="token punctuation">(</span><span class="token variable">$watchFile_md5</span><span class="token punctuation">,</span> <span class="token variable">$getMd5File</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4EE3\u8868\u6587\u4EF6\u88AB\u4FEE\u6539\u4E86</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u6587\u4EF6\u88AB\u4FEE\u6539\u4E86&quot;</span><span class="token operator">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Y-m-d H:i:s&quot;</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
            <span class="token variable">$watchFile_md5</span> <span class="token operator">=</span> <span class="token variable">$getMd5File</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">23891</span>
<span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># \u6587\u4EF6\u88AB\u4FEE\u6539\u4E862022-09-17 20:10:12</span>
\u6587\u4EF6\u88AB\u4FEE\u6539\u4E862022-09-17 <span class="token number">20</span>:10:21

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u573A\u666F\u7EC3\u4E60-mysql-\u5EFA\u8BAE\u5DE1\u68C0\u76D1\u63A7" tabindex="-1"><a class="header-anchor" href="#\u573A\u666F\u7EC3\u4E60-mysql-\u5EFA\u8BAE\u5DE1\u68C0\u76D1\u63A7" aria-hidden="true">#</a> \u573A\u666F\u7EC3\u4E60\uFF1AMySQL \u5EFA\u8BAE\u5DE1\u68C0\u76D1\u63A7</h2><p>\u7B80\u6613\u76D1\u63A7\u6307\u6807\uFF1A</p><ol><li>\u8FDE\u63A5\u662F\u5426\u6B63\u5E38(<code>select 1</code>)</li><li>\u67E5\u8BE2\u8FDE\u63A5\u6570(<code>show PROCESSLIST</code>\u3001<code>select count(*) from information_schema.processlist</code>)</li><li>\u67E5\u8BE2\u7EBF\u7A0B\u4F7F\u7528\u60C5\u51B5(<code>select * from information_schema.GLOBAL_STATUS where Variable_name like &#39;Thread%&#39;</code>) <ol><li><code>Thread_cached</code>\uFF1A\u7EBF\u7A0B\u6C60\u4E2D\u8FD8\u6709\u591A\u5C11\u53EF\u4EE5\u88AB\u590D\u7528\u7684\u7EBF\u7A0B</li><li><code>Thread_connected</code>\uFF1A\u548C<code>show processlist</code>\u4E00\u6837</li><li><code>Thread_created</code>\uFF1A\u65B0\u521B\u5EFA\u7684\u7EBF\u7A0B</li><li><code>Thread_running</code>\uFF1A\u6B63\u5728\u8FD0\u884C\u7684\u8FDE\u63A5(\u975E<code>sleep</code>)</li></ol></li></ol><p>\u9700\u8981<code>swoole=4.3.x</code></p><blockquote><p>\u4ECE MySQL5.7.6 \u5F00\u59CB<code>information_schema.GLOBAL_STATUS</code>\u5DF2\u7ECF\u5F00\u59CB\u88AB\u820D\u5F03\uFF0C\u4E3A\u4E86\u517C\u5BB9\u6027\uFF0C\u6B64\u65F6\u9700\u8981\u6253\u5F00<code>show_compatibility_56</code></p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span>  <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%show_compatibility_56%&#39;</span><span class="token punctuation">;</span>  <span class="token comment"># \u67E5\u770Bshow_compatibility_56%\u7684\u5F00\u5173</span>
<span class="token operator">+</span><span class="token comment">-----------------------+-------+</span>
<span class="token operator">|</span> Variable_name         <span class="token operator">|</span> <span class="token keyword">Value</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+-------+</span>
<span class="token operator">|</span> show_compatibility_56 <span class="token operator">|</span> <span class="token keyword">OFF</span>   <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+-------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
mysql<span class="token operator">&gt;</span> <span class="token keyword">set</span> <span class="token keyword">global</span> show_compatibility_56<span class="token operator">=</span><span class="token keyword">on</span><span class="token punctuation">;</span>  <span class="token comment"># \u6253\u5F00show_compatibility_56\u7684\u5F00\u5173</span>
Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span>

mysql<span class="token operator">&gt;</span>  <span class="token keyword">show</span> variables <span class="token operator">like</span> <span class="token string">&#39;%show_compatibility_56%&#39;</span><span class="token punctuation">;</span>
<span class="token operator">+</span><span class="token comment">-----------------------+-------+</span>
<span class="token operator">|</span> Variable_name         <span class="token operator">|</span> <span class="token keyword">Value</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+-------+</span>
<span class="token operator">|</span> show_compatibility_56 <span class="token operator">|</span> <span class="token keyword">ON</span>    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token comment">-----------------------+-------+</span>
<span class="token number">1</span> <span class="token keyword">row</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>set global show_compatibility_56=on;</code>\u9700\u8981\u4EE5<code>root</code>\u6743\u9650\u6700\u5927\u7684\u8FDB\u884C\u8BBE\u3002</p><p>\u4EE3\u7801\u5B9E\u73B0\uFF1A</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Coroutine<span class="token punctuation">\\</span>MySQL</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span> <span class="token operator">.</span> <span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$mysql</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;\u81EA\u5DF1\u7684\u6570\u636E\u5E93\u5BC6\u7801&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;database&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;information_schema&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$checkConnection</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;select 1&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$checkProcessCheck</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;select count(*) as c from information_schema.processlist&quot;</span><span class="token punctuation">;</span>
    <span class="token variable">$checkThread</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;select * from information_schema.GLOBAL_STATUS where Variable_name like &#39;Thread%&#39;&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$checkResult</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;Y-m-d H:i:s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$checkConnection</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$checkResult</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;\u68C0\u67E5\u8FDE\u63A5\u6B63\u5E38&quot;</span><span class="token punctuation">;</span>
            <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$checkProcessCheck</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$checkResult</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDE\u63A5\u6570:&quot;</span> <span class="token operator">.</span> <span class="token variable">$res</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$checkThread</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$checkResult</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;\u68C0\u67E5\u7EBF\u7A0B\u60C5\u51B5&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$res</span> <span class="token keyword">as</span> <span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token variable">$checkResult</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$key</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;:&quot;</span> <span class="token operator">.</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token variable">$checkResult</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;-------------------------------&quot;</span><span class="token punctuation">;</span>

            <span class="token keyword">echo</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token constant">PHP_EOL</span><span class="token punctuation">,</span> <span class="token variable">$checkResult</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>Exception</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>-------------------------------
<span class="token number">2022</span>-09-17 <span class="token number">20</span>:39:27
\u68C0\u67E5\u8FDE\u63A5\u6B63\u5E38
\u5F53\u524D\u8FDE\u63A5\u6570:1
\u68C0\u67E5\u7EBF\u7A0B\u60C5\u51B5
VARIABLE_NAME:THREADS_CACHED
VARIABLE_VALUE:2
VARIABLE_NAME:THREADS_CONNECTED
VARIABLE_VALUE:1
VARIABLE_NAME:THREADS_CREATED
VARIABLE_VALUE:3
VARIABLE_NAME:THREADS_RUNNING
VARIABLE_VALUE:1
-------------------------------2022-09-17 <span class="token number">20</span>:39:17

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u5B8C\u4E86\uFF0C\u522B\u5FD8\u4E86\u6740\u6389\u8FD9\u4E2A\u5B50\u8FDB\u7A0B\u3002</p><h2 id="\u591A\u8FDB\u7A0B\u76D1\u63A7-x-\u8868\u6570\u636E-\u7236\u5B50\u8FDB\u7A0B\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u591A\u8FDB\u7A0B\u76D1\u63A7-x-\u8868\u6570\u636E-\u7236\u5B50\u8FDB\u7A0B\u901A\u4FE1" aria-hidden="true">#</a> \u591A\u8FDB\u7A0B\u76D1\u63A7 x \u8868\u6570\u636E\uFF0C\u7236\u5B50\u8FDB\u7A0B\u901A\u4FE1</h2>`,18),_n=s("\u65E7\u7248\u6587\u6863\u6709"),wn=n("code",null,"write",-1),fn=s("\u548C"),qn=n("code",null,"read",-1),yn=s("\u7684\u76F8\u5173\u6587\u6863\u5185\u5BB9\uFF1A"),$n={href:"https://wiki.swoole.com/wiki/page/216.html",target:"_blank",rel:"noopener noreferrer"},Pn=s("https://wiki.swoole.com/wiki/page/216.html"),xn=t(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Coroutine<span class="token punctuation">\\</span>MySQL</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span> <span class="token operator">.</span> <span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$mysql</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;yourpassword&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;database&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;yourdatabase&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;select * from orders where status = 0 order by id desc limit 0, 1&quot;</span><span class="token punctuation">;</span>
        <span class="token variable">$rows</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$rows</span> <span class="token operator">&amp;&amp;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5411\u4E3B\u8FDB\u7A0B\u53D1\u9001\u4E00\u4E2A\u6D88\u606F</span>
            <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;order_user&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9700\u8981\u8BBE\u7F6E\u6D41\u7C7B\u578B\u7BA1\u9053 pipe_type: 1 \u4E0D\u7136\u65E0\u6CD5\u548C\u4E3B\u8FDB\u7A0B\u53D1\u9001\u6D88\u606F</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$getMsg</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$getMsg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u8FDB\u7A0B2\u5F97\u5230\u62A5\u8B66\u6D88\u606F: &quot;</span> <span class="token operator">.</span> <span class="token variable">$getMsg</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BCF\u6B21\u8BFB\u53D6\u4E0D\u8D85\u8FC764k</span>
    <span class="token variable">$getMsg</span> <span class="token operator">=</span> <span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$getMsg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token variable">$getMsg</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5411\u5B50\u8FDB\u7A0B child2 \u53D1\u9001\u6D88\u606F</span>
    <span class="token punctuation">}</span>
    <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u591A\u8FDB\u7A0B\u76D1\u63A7-x-\u8868\u6570\u636E-\u961F\u5217\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u591A\u8FDB\u7A0B\u76D1\u63A7-x-\u8868\u6570\u636E-\u961F\u5217\u901A\u4FE1" aria-hidden="true">#</a> \u591A\u8FDB\u7A0B\u76D1\u63A7 x \u8868\u6570\u636E\uFF0C\u961F\u5217\u901A\u4FE1</h2>`,2),In=s("\u8FD8\u662F\u4F7F\u7528\u65E7\u7248\u7684\u6587\u6863\u91CC\u6709\u76F8\u5173\u51FD\u6570\u4ECB\u7ECD\uFF1A"),Ln={href:"https://wiki.swoole.com/wiki/page/289.html",target:"_blank",rel:"noopener noreferrer"},Dn=s("https://wiki.swoole.com/wiki/page/289.html"),Sn=t(`<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Coroutine<span class="token punctuation">\\</span>MySQL</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span> <span class="token operator">.</span> <span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$mysql</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;database&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;select order_user from orders where status = 0 order by id desc limit 0, 1&quot;</span><span class="token punctuation">;</span>
        <span class="token variable">$rows</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$rows</span> <span class="token operator">&amp;&amp;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5411\u4E3B\u8FDB\u7A0B\u53D1\u9001\u4E00\u4E2A\u6D88\u606F</span>
            <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;order_user&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9700\u8981\u8BBE\u7F6E\u6D41\u7C7B\u578B\u7BA1\u9053 pipe_type: 1 \u4E0D\u7136\u65E0\u6CD5\u548C\u4E3B\u8FDB\u7A0B\u53D1\u9001\u6D88\u606F</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">useQueue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$getMsg</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u961F\u5217\u91CC\u5F39\u51FA\u4E00\u4E2A\u6D88\u606F \u6CA1\u6709\u6570\u636E\u4F1A\u963B\u585E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$getMsg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u8FDB\u7A0B2\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: &quot;</span> <span class="token operator">.</span> <span class="token variable">$getMsg</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// key \u4E00\u6837</span>
<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">useQueue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># php c1.php</span>
\u5F53\u524D\u8FDB\u7A0BID: <span class="token number">17515</span>
<span class="token punctuation">[</span>root@jb51 process<span class="token punctuation">]</span><span class="token comment"># \u8FDB\u7A0B2\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CA1\u6709\u6536\u5230\u8BBE\u5907\u6570\u636E\u5927\u4E8E60\u5206\u949F</span>
\u8FDB\u7A0B2\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CA1\u6709\u6536\u5230\u8BBE\u5907\u6570\u636E\u5927\u4E8E60\u5206\u949F
\u8FDB\u7A0B2\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CA1\u6709\u6536\u5230\u8BBE\u5907\u6570\u636E\u5927\u4E8E60\u5206\u949F
\u8FDB\u7A0B2\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CA1\u6709\u6536\u5230\u8BBE\u5907\u6570\u636E\u5927\u4E8E60\u5206\u949F
\u8FDB\u7A0B2\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CA1\u6709\u6536\u5230\u8BBE\u5907\u6570\u636E\u5927\u4E8E60\u5206\u949F

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u6DFB\u52A0\u4E00\u4E2A\u8FDB\u7A0B\u6765\u67E5\u770B\u662F\u5426\u4E89\u62A2\u6D88\u606F\uFF1B\u8FD9\u91CC\u5176\u5B9E\u8FD8\u662F\u4E0D\u5B89\u5168\u7684\uFF0C\u5982\u679C\u53D6\u6570\u636E\u4E4B\u540E\u5904\u7406\u7684\u4E1A\u52A1\u6BD4\u8F83\u8017\u65F6\uFF0C\u4E0B\u4E00\u4E2A\u6D88\u606F\u53C8\u53D1\u8FC7\u6765\u4E86\uFF0C\u5C31\u4F1A\u51FA\u73B0\u95EE\u9898\uFF0C\u8FD8\u662F\u9700\u8981\u52A0\u4E0A\u4E00\u4E2A<code>redis</code>\u9501\u6765\u4FDD\u8BC1\u6D88\u8D39\u6570\u636E\u4E1A\u52A1\u7684\u65F6\u5019\u5B89\u5168\u3002</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Process</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Swoole<span class="token punctuation">\\</span>Coroutine<span class="token punctuation">\\</span>MySQL</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u5F53\u524D\u8FDB\u7A0BID: &quot;</span> <span class="token operator">.</span> <span class="token function">posix_getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
<span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">cli_set_process_title</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_child&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$mysql</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySQL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;host&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;database&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$offset</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;select order_user from orders where status = 0 order by id desc limit <span class="token interpolation"><span class="token variable">$offset</span></span>, 1&quot;</span><span class="token punctuation">;</span>
        <span class="token variable">$rows</span> <span class="token operator">=</span> <span class="token variable">$mysql</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$rows</span> <span class="token operator">&amp;&amp;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5411\u4E3B\u8FDB\u7A0B\u53D1\u9001\u4E00\u4E2A\u6D88\u606F</span>
            <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;order_user&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$offset</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u9700\u8981\u8BBE\u7F6E\u6D41\u7C7B\u578B\u7BA1\u9053 pipe_type: 1 \u4E0D\u7136\u65E0\u6CD5\u548C\u4E3B\u8FDB\u7A0B\u53D1\u9001\u6D88\u606F</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">useQueue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$child1</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child2</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$getMsg</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u961F\u5217\u91CC\u5F39\u51FA\u4E00\u4E2A\u6D88\u606F \u6CA1\u6709\u6570\u636E\u4F1A\u963B\u585E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$getMsg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u8FDB\u7A0B2\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: &quot;</span> <span class="token operator">.</span> <span class="token variable">$getMsg</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// key \u4E00\u6837</span>
<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">useQueue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$child2</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$child3</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Process</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token class-name type-declaration">Process</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">0.5</span> <span class="token operator">*</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$getMsg</span> <span class="token operator">=</span> <span class="token variable">$p</span><span class="token operator">-&gt;</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECE\u961F\u5217\u91CC\u5F39\u51FA\u4E00\u4E2A\u6D88\u606F \u6CA1\u6709\u6570\u636E\u4F1A\u963B\u585E</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$getMsg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;\u8FDB\u7A0B3\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: &quot;</span> <span class="token operator">.</span> <span class="token variable">$getMsg</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// key \u4E00\u6837</span>
<span class="token variable">$child3</span><span class="token operator">-&gt;</span><span class="token function">useQueue</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$child3</span><span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token constant">SIGCHLD</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$sig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5FC5\u987B\u4E3Afalse\uFF0C\u975E\u963B\u585E\u6A21\u5F0F</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$ret</span> <span class="token operator">=</span> <span class="token class-name static-context">Process</span><span class="token operator">::</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ret</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\uE000\u7A0B\uE0003\u4ECE\uE000\u961F\uE000\u5217\uE000\u5F97\uE000\u5230\uE000\u62A5\uE000\u8B66\uE000\u6D88\uE000\u606F\uE000: \u6CA1\uE000\u6709\uE000\u6536\uE000\u5230\uE000\u8BBE\uE000\u5907\uE000\u6570\uE000\u636E\uE000\u5927\uE000\u4E8E\uE00060\u5206\uE000\u949F\uE000
\u8FDB\u7A0B2\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CA1\u6709\u6536\u5230\u8BBE\u5907\u6570\u636E\u5927\u4E8E30\u5206\u949F
\u8FDB\u7A0B3\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u6CBB\u7597\u4E8B\u4EF6\u62A5\u8B66
\u8FDB\u7A0B2\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u9664\u98A4\u5B8C\u6210\u8B66\u544A
\u8FDB\u7A0B3\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u672A\u7ED1\u5B9A\u60A3\u8005\u5927\u4E8E20\u5206\u949F
\u8FDB\u7A0B2\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u9664\u98A4\u5B8C\u6210\u8B66\u544A
\u8FDB\u7A0B3\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u672A\u7ED1\u5B9A\u60A3\u8005\u5927\u4E8E20\u5206\u949F
\u8FDB\u7A0B2\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u9664\u98A4\u5B8C\u6210\u8B66\u544A
\u8FDB\u7A0B3\u4ECE\u961F\u5217\u5F97\u5230\u62A5\u8B66\u6D88\u606F: \u672A\u7ED1\u5B9A\u60A3\u8005\u5927\u4E8E20\u5206\u949F
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function En(Hn,Mn){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[r,k,n("a",d,[v,p(a)])]),n("li",null,[m,b,n("a",g,[h,p(a)])])]),n("div",_,[w,n("p",null,[f,q,n("a",y,[$,p(a)]),P,x,I,L,D,S,E,H,M,A,O])]),C,n("p",null,[T,j,n("a",R,[V,p(a)])]),Q,n("ul",null,[n("li",null,[G,n("ul",null,[n("li",null,[B,N,n("a",F,[U,p(a)]),z]),Y,K])])]),J,n("p",null,[W,X,Z,n("a",nn,[sn,p(a)])]),an,n("ol",null,[pn,n("li",null,[tn,n("p",null,[en,n("a",on,[cn,p(a)])]),ln])]),un,n("p",null,[rn,kn,n("a",dn,[vn,p(a)])]),n("p",null,[mn,n("a",bn,[gn,p(a)])]),hn,n("p",null,[_n,wn,fn,qn,yn,n("a",$n,[Pn,p(a)])]),xn,n("p",null,[In,n("a",Ln,[Dn,p(a)])]),Sn])}var Cn=e(i,[["render",En],["__file","swoole-process.html.vue"]]);export{Cn as default};
