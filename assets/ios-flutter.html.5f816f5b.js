import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";import{r as o,o as c,c as l,a as n,b as p,e as a,d as s}from"./app.1c8fdc53.js";const i={},u=a(`<h1 id="ios-\u5F00\u53D1\u8005\u7684-flutter-\u5FEB\u901F\u4E0A\u624B\u6307\u5357" tabindex="-1"><a class="header-anchor" href="#ios-\u5F00\u53D1\u8005\u7684-flutter-\u5FEB\u901F\u4E0A\u624B\u6307\u5357" aria-hidden="true">#</a> ios \u5F00\u53D1\u8005\u7684 flutter \u5FEB\u901F\u4E0A\u624B\u6307\u5357</h1><h2 id="ios-\u4E3B\u8981\u7684\u6982\u5FF5\u548C-flutter-\u7684\u5BF9\u5E94\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#ios-\u4E3B\u8981\u7684\u6982\u5FF5\u548C-flutter-\u7684\u5BF9\u5E94\u5173\u7CFB" aria-hidden="true">#</a> IOS \u4E3B\u8981\u7684\u6982\u5FF5\u548C Flutter \u7684\u5BF9\u5E94\u5173\u7CFB</h2><table><thead><tr><th>\u4E3B\u8981\u6982\u5FF5</th><th>IOS \u4E2D</th><th>Flutter \u4E2D\u7684\u5BF9\u5E94</th></tr></thead><tbody><tr><td>\u9875\u9762</td><td>ViewController</td><td>Widget</td></tr><tr><td>\u89C6\u56FE</td><td>UIView</td><td>Widget</td></tr><tr><td>\u9875\u9762\u8DF3\u8F6C</td><td>UINavigationController</td><td>Navigator</td></tr><tr><td>\u7F51\u7EDC\u5E93</td><td>Alamofire\u3001AFNetworking</td><td>http</td></tr><tr><td>\u6570\u636E\u5B58\u50A8</td><td>NSUserDefaults\u3001FMDB</td><td>shared_preferences\u3001sqflite</td></tr></tbody></table><h2 id="\u76F8\u5173\u5E03\u5C40\u7684\u5BF9\u5E94\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#\u76F8\u5173\u5E03\u5C40\u7684\u5BF9\u5E94\u5173\u7CFB" aria-hidden="true">#</a> \u76F8\u5173\u5E03\u5C40\u7684\u5BF9\u5E94\u5173\u7CFB</h2><table><thead><tr><th>\u4E3B\u8981\u6982\u5FF5</th><th>IOS \u4E2D</th><th>Flutter \u4E2D\u7684\u5BF9\u5E94</th></tr></thead><tbody><tr><td>\u5E03\u5C40\u6587\u4EF6</td><td>Storyboard\u3001xib</td><td>Widget</td></tr><tr><td>\u6EDA\u52A8\u89C6\u56FE</td><td>ScrollView</td><td>ListView</td></tr><tr><td>\u5217\u8868</td><td>UITableView\u3001UICollectionView</td><td>ListView</td></tr><tr><td>\u6587\u672C\u6846</td><td>TextView</td><td>Text</td></tr><tr><td>\u8F93\u5165\u6846</td><td>TextView</td><td>TextField</td></tr></tbody></table><h2 id="\u7F51\u7EDC\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u7F51\u7EDC\u64CD\u4F5C" aria-hidden="true">#</a> \u7F51\u7EDC\u64CD\u4F5C</h2><p>\u4F7F\u7528 HTTP \u5E93</p><p><strong>\u7B2C\u4E00\u6B65\uFF1A\u6DFB\u52A0\u4F9D\u8D56</strong></p><p>\u5728<code>pubspec.yaml</code>\u4E2D\u5F15\u5165<code>http</code>\u63D2\u4EF6</p><p>\u5728\u9879\u76EE\u6839\u76EE\u5F55\u4E0B\u6267\u884C</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code>\u279C  started_flutter flutter pub add htt
Because started_flutter depends on htt any which doesn&#39;t exist (could not find
package htt at https<span class="token punctuation">:</span>//pub.dev)<span class="token punctuation">,</span> version solving failed.
\u279C  started_flutter
\u279C  started_flutter flutter pub add http
Resolving dependencies<span class="token punctuation">...</span>
collection 1.17.1 (1.17.2 available)
+ http 1.0.0
+ http_parser 4.0.2
lints 2.1.0 (2.1.1 available)
matcher 0.12.15 (0.12.16 available)
material_color_utilities 0.2.0 (0.5.0 available)
source_span 1.9.1 (1.10.0 available)
test_api 0.5.1 (0.6.0 available)
+ typed_data 1.3.2
Changed 3 dependencies<span class="token tag">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005\u76F4\u63A5\u5728\u4F9D\u8D56\u6587\u4EF6\u4E2D\u6DFB\u52A0</p><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>
    <span class="token key atrule">http</span><span class="token punctuation">:</span> &lt;latest_version<span class="token punctuation">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9700\u8981\u81EA\u5DF1\u4FEE\u6539\u7248\u672C\u3002</p><p><strong>\u7B2C\u4E8C\u6B65\uFF1A\u5BFC\u5165 http</strong></p><p>\u5728<code>dart</code>\u6587\u4EF6\u4E2D\u5BFC\u5165</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:http/http.dart&#39;</span></span> <span class="token operator">as</span> http<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528-http-\u5E93\u505A-get-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-http-\u5E93\u505A-get-\u8BF7\u6C42" aria-hidden="true">#</a> \u4F7F\u7528 http \u5E93\u505A get \u8BF7\u6C42</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token comment">///\u53D1\u9001Get\u8BF7\u6C42</span>
  <span class="token function">_doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;https://api.devio.org/uapi/test/test?requestPrams=ChatGPT&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//http\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;\u8BF7\u6C42\u5931\u8D25\uFF1Acode: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>statusCode</span><span class="token punctuation">}</span></span><span class="token string">\uFF0Cbody:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>body</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>http.get()</code>\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B<code>http.Response</code>\u7684<code>Future</code>\uFF1A</p>`,20),r={href:"https://api.flutter.dev/flutter/dart-async/Future-class.html",target:"_blank",rel:"noopener noreferrer"},d=s("Future"),k=s("\uFF1A\u662F\u4E0E\u5F02\u6B65\u64CD\u4F5C\u4E00\u8D77\u5DE5\u4F5C\u7684\u6838\u5FC3 Dart \u7C7B\uFF0C\u5B83\u7528\u4E8E\u8868\u793A\u672A\u6765\u67D0\u4E2A\u65F6\u95F4\u53EF\u80FD\u4F1A\u51FA\u73B0\u7684\u53EF\u7528\u503C\u6216\u9519\u8BEF\uFF1B"),v=n("li",null,[n("code",null,"http.Response"),s("\uFF1A\u7C7B\u5305\u542B\u4E00\u4E2A\u6210\u529F\u7684 HTTP \u8BF7\u6C42\u63A5\u6536\u5230\u7684\u6570\u636E\uFF1B")],-1),m=n("li",null,[n("code",null,"response.statusCode"),s("\uFF1A\u901A\u8FC7 statusCode \u53EF\u4EE5\u83B7\u53D6 http \u8BF7\u6C42\u72B6\u6001\u7801\uFF0C200 \u4EE3\u8868\u8BF7\u6C42\u6210\u529F\uFF1B")],-1),b=n("li",null,[n("code",null,"response.body"),s("\uFF1A\u901A\u8FC7 body \u83B7\u53D6\u8FD4\u56DE\u7684\u6570\u636E\uFF1B")],-1),h=a(`<h3 id="\u4F7F\u7528-http-\u505A-post-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-http-\u505A-post-\u8BF7\u6C42" aria-hidden="true">#</a> \u4F7F\u7528 http \u505A post \u8BF7\u6C42</h3><p>\u4F7F\u7528 post \u4F20\u9012\u7684\u6570\u636E\u5E38\u7528\u7684\u5185\u5BB9\u7C7B\u578B\u4E3B\u8981\u6709\u4E24\u79CD\uFF1A</p><ul><li><code>x-www-form-urlencoded</code></li><li><code>application/json</code></li></ul><h3 id="\u53D1\u9001x-www-form-urlencoded-\u540E\u9762\u7B80\u79F0-form-\u7C7B\u578B-\u7C7B\u578B\u7684\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001x-www-form-urlencoded-\u540E\u9762\u7B80\u79F0-form-\u7C7B\u578B-\u7C7B\u578B\u7684\u6570\u636E" aria-hidden="true">#</a> \u53D1\u9001<code>x-www-form-urlencoded</code>\uFF08\u540E\u9762\u7B80\u79F0 form \u7C7B\u578B\uFF09\u7C7B\u578B\u7684\u6570\u636E\uFF1A</h3><p>form \u7C7B\u578B\u662F post \u8BF7\u6C42\u4E2D\u8F83\u4E3A\u5E38\u89C1\u7684\u4E00\u79CD\u5185\u5BB9\u7C7B\u578B\uFF0C\u4E5F\u662F http \u5E93\u9ED8\u8BA4\u7684\u5185\u5BB9\u7C7B\u578B\u3002</p><p>\u6CE8\u610F\uFF1Abody \u5FC5\u987B\u4E3A<code>Map&lt;String, String&gt;</code>\u7C7B\u578B\u3002</p><blockquote><p>\u4EE3\u7801\u793A\u4F8B\uFF1A</p></blockquote><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code>  <span class="token function">_doPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;https://api.devio.org/uapi/test/test&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&quot;requestPrams&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;doPost\uFF1AChatGPT&quot;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//\u6570\u636E\u683C\u5F0F\u5FC5\u987B\u4E3AMap&lt;String, String&gt;</span>
    <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> body<span class="token punctuation">:</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u9ED8\u8BA4\u4E3Ax-www-form-urlencoded \u683C\u5F0F\uFF0C\u6240\u4EE5\u53EF\u4EE5\u4E0D\u7528\u8BBE\u7F6Econtent-type</span>
    <span class="token comment">//http\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;\u8BF7\u6C42\u5931\u8D25\uFF1Acode: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>statusCode</span><span class="token punctuation">}</span></span><span class="token string">\uFF0Cbody:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>body</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>http.post()</code>\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B<code>http.Response</code>\u7684<code>Future</code>\uFF1A</p>`,9),g={href:"https://docs.flutter.io/flutter/dart-async/Future-class.html",target:"_blank",rel:"noopener noreferrer"},y=s("Future"),w=s("\uFF1A\u662F\u4E0E\u5F02\u6B65\u64CD\u4F5C\u4E00\u8D77\u5DE5\u4F5C\u7684\u6838\u5FC3 Dart \u7C7B\u3002\u5B83\u7528\u4E8E\u8868\u793A\u672A\u6765\u67D0\u4E2A\u65F6\u95F4\u53EF\u80FD\u4F1A\u51FA\u73B0\u7684\u53EF\u7528\u503C\u6216\u9519\u8BEF\uFF1B"),f=n("li",null,[n("code",null,"http.Response"),s("\uFF1A\u7C7B\u5305\u542B\u4E00\u4E2A\u6210\u529F\u7684 HTTP \u8BF7\u6C42\u63A5\u6536\u5230\u7684\u6570\u636E\uFF1B")],-1),_=a(`<h3 id="\u53D1\u9001application-json-\u540E\u9762\u7B80\u79F0-json-\u7C7B\u578B-\u7C7B\u578B\u7684\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u53D1\u9001application-json-\u540E\u9762\u7B80\u79F0-json-\u7C7B\u578B-\u7C7B\u578B\u7684\u6570\u636E" aria-hidden="true">#</a> \u53D1\u9001<code>application/json</code>\uFF08\u540E\u9762\u7B80\u79F0 json \u7C7B\u578B\uFF09\u7C7B\u578B\u7684\u6570\u636E</h3><p>\u8981\u53D1\u9001 json \u7C7B\u578B\u7684\u6570\u636E\uFF0C\u4E3B\u8981\u6709\u4EE5\u4E0B\u6B65\u9AA4\uFF1A</p><ol><li>\u5C06\u6570\u636E\u8F6C\u6362\u4E3A json String\uFF0C\u53EF\u4EE5\u5229\u7528 jsonEncode()\u6765\u8F6C\uFF1B</li><li>\u5C06 json \u6570\u636E\u8D4B\u503C\u7ED9 body \u53C2\u6570\uFF1B</li><li>\u5728 header \u4E2D\u8BBE\u7F6E<code>content-type</code>\u4E3A<code>application/json</code>\uFF1B</li></ol><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code> <span class="token comment">///\u53D1\u9001Json\u7C7B\u578B\u7684Post\u8BF7\u6C42</span>
  <span class="token function">_doPostJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;https://api.devio.org/uapi/test/testJson&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&quot;requestPrams&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;doPost\uFF1AChatGPT&quot;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> body<span class="token punctuation">:</span> <span class="token function">jsonEncode</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//\u5C06\u6570\u636E\u8F6C\u6210json string</span>
        headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u8BBE\u7F6Econtent-type\u4E3Aapplication/json</span>
          <span class="token string-literal"><span class="token string">&quot;content-type&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;application/json&quot;</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//http\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;\u8BF7\u6C42\u5931\u8D25\uFF1Acode: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>statusCode</span><span class="token punctuation">}</span></span><span class="token string">\uFF0Cbody:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>body</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5982\u4F55\u5C06\u8BF7\u6C42\u7ED3\u679C\u5C55\u793A\u5728\u754C\u9762\u4E0A" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5C06\u8BF7\u6C42\u7ED3\u679C\u5C55\u793A\u5728\u754C\u9762\u4E0A" aria-hidden="true">#</a> \u5982\u4F55\u5C06\u8BF7\u6C42\u7ED3\u679C\u5C55\u793A\u5728\u754C\u9762\u4E0A</h3><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:convert&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:flutter/material.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:http/http.dart&#39;</span></span> <span class="token operator">as</span> http<span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">HttpICan</span> <span class="token keyword">extends</span> <span class="token class-name">StatefulWidget</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token class-name">HttpICan</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Key</span><span class="token operator">?</span> key<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">super</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpICan</span><span class="token punctuation">&gt;</span></span> <span class="token function">createState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token function">_HttpICanState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> _HttpICanState <span class="token keyword">extends</span> <span class="token class-name">State</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpICan</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> resultShow2 <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;&#39;</span></span><span class="token punctuation">;</span>

  <span class="token keyword">get</span> _goGetBtn <span class="token operator">=</span><span class="token operator">&gt;</span>
      <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>onPressed<span class="token punctuation">:</span> _doGet<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;\u53D1\u9001Get\u8BF7\u6C42&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">get</span> _doPostBtn <span class="token operator">=</span><span class="token operator">&gt;</span>
      <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>onPressed<span class="token punctuation">:</span> _doPost<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;\u53D1\u9001Post\u8BF7\u6C42&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">get</span> _doPostJsonBtn <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token class-name">ElevatedButton</span><span class="token punctuation">(</span>
      onPressed<span class="token punctuation">:</span> _doPostJson<span class="token punctuation">,</span> child<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;\u53D1\u9001Json\u683C\u5F0F\u7684Post\u8BF7\u6C42&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token metadata function">@override</span>
  <span class="token class-name">Widget</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token class-name">BuildContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">Scaffold</span><span class="token punctuation">(</span>
      appBar<span class="token punctuation">:</span> <span class="token class-name">AppBar</span><span class="token punctuation">(</span>
        title<span class="token punctuation">:</span> <span class="token keyword">const</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;\u5E26\u4F60\u73A9\u8F6CFlutter http\u7F51\u7EDC\u64CD\u4F5C&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      body<span class="token punctuation">:</span> <span class="token class-name">Column</span><span class="token punctuation">(</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          _goGetBtn<span class="token punctuation">,</span>
          _doPostBtn<span class="token punctuation">,</span>
          _doPostJsonBtn<span class="token punctuation">,</span>
          <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;\u8FD4\u56DE\u7684\u7ED3\u679C\uFF1A</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">resultShow</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;\u89E3\u6790\u6570\u636Emsg\uFF1A</span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">resultShow2</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">///\u53D1\u9001Get\u8BF7\u6C42</span>
  <span class="token keyword">void</span> <span class="token function">_doGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uri <span class="token operator">=</span>
        <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;https://api.devio.org/uapi/test/test?requestPrams=ChatGPT&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//http\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\uFF1Acode:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>statusCode</span><span class="token punctuation">}</span></span><span class="token string">, body:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>body</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">///\u53D1\u9001Post\u8BF7\u6C42</span>
  <span class="token keyword">void</span> <span class="token function">_doPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;https://api.devio.org/uapi/test/test&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;requestPrams&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;doPost:ChatGPT&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> body<span class="token punctuation">:</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//http\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\uFF1Acode:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>statusCode</span><span class="token punctuation">}</span></span><span class="token string">, body:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>body</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">void</span> <span class="token function">_doPostJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token class-name">Uri</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;https://api.devio.org/uapi/test/testJson&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-literal"><span class="token string">&#39;requestPrams&#39;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;doPost:ChatGPT&#39;</span></span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span>
        body<span class="token punctuation">:</span> <span class="token function">jsonEncode</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">//\u5C06\u6570\u636E\u8F6C\u6210json string</span>
        headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u8BBE\u7F6Econtent-type\u4E3Aapplication/json</span>
          <span class="token string-literal"><span class="token string">&quot;content-type&quot;</span></span><span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;application/json&quot;</span></span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//http\u8BF7\u6C42\u6210\u529F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> response<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token function">jsonDecode</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow2 <span class="token operator">=</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;msg&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;\u8BF7\u6C42\u5931\u8D25\uFF1Acode:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>statusCode</span><span class="token punctuation">}</span></span><span class="token string">, body:</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">response<span class="token punctuation">.</span>body</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5982\u4F55\u5C06-response-\u8F6C\u6362\u6210-dart-object" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5C06-response-\u8F6C\u6362\u6210-dart-object" aria-hidden="true">#</a> \u5982\u4F55\u5C06 Response \u8F6C\u6362\u6210 Dart object</h3><p>\u4F7F\u7528<code>dart:convert</code> \u4E2D\u7684<code>jsonDecode</code>\u5C06 json string \u8F6C\u6210 Map</p><div class="language-dart ext-dart line-numbers-mode"><pre class="language-dart"><code><span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token function">jsonDecode</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultShow2 <span class="token operator">=</span> map<span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;msg&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://virusoss.oss-cn-shanghai.aliyuncs.com/images/image-20230612213850411.png" alt="image-20230612213850411" loading="lazy"></p>`,10);function x(S,P){const t=o("ExternalLinkIcon");return c(),l("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[d,p(t)]),k]),v,m,b]),h,n("ul",null,[n("li",null,[n("a",g,[y,p(t)]),w]),f]),_])}var j=e(i,[["render",x],["__file","ios-flutter.html.vue"]]);export{j as default};
