import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o,c,a as n,b as i,e as a,d as s}from"./app.b3cd35d0.js";const u={},l=a(`<h1 id="rust-\u7B2C\u4E00\u4E2A\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#rust-\u7B2C\u4E00\u4E2A\u7A0B\u5E8F" aria-hidden="true">#</a> rust \u7B2C\u4E00\u4E2A\u7A0B\u5E8F</h1><h2 id="\u7B2C\u4E00\u4E2A-rust-\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u4E2A-rust-\u4EE3\u7801" aria-hidden="true">#</a> \u7B2C\u4E00\u4E2A rust \u4EE3\u7801</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;hi wxvirus&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684<code>println!</code>\uFF0C\u662F\u4E00\u4E2A\u5B8F</p><p>\u4F7F\u7528<code>rustc</code>\u8FDB\u884C\u7F16\u8BD1</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u279C  rustworkspace rustc main.rs
\u279C  rustworkspace ./main
hi wxvirus
\u279C  rustworkspace
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B89\u88C5\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u6E90\u7801" aria-hidden="true">#</a> \u5B89\u88C5\u6E90\u7801</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>rustup component <span class="token function">add</span> rust-src
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u7136\u540E\u4F7F\u7528<code>vs code</code>\u5B89\u88C5\u4E00\u4E9B\u63D2\u4EF6\uFF0C\u91CD\u65B0\u6253\u5F00\u4E0A\u8FF0\u6587\u4EF6\u76EE\u5F55\uFF0C\u5C31\u53EF\u4EE5\u70B9\u51FB\u8FDB\u5165<code>println!</code>\u8FD9\u4E2A\u5B8F\u91CC\u9762\u53BB\u67E5\u770B\u6E90\u7801\u4E86\u3002</p><h2 id="\u7B2C\u4E00\u4E2A\u6BD4\u8F83\u6B63\u5E38\u7684\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u4E2A\u6BD4\u8F83\u6B63\u5E38\u7684\u7A0B\u5E8F" aria-hidden="true">#</a> \u7B2C\u4E00\u4E2A\u6BD4\u8F83\u6B63\u5E38\u7684\u7A0B\u5E8F</h2><p>\u4F7F\u7528<code>cargo new scrape_url</code>\u751F\u6210\u4E00\u4E2A\u65B0\u9879\u76EE\uFF0C\u5165\u53E3\u5728<code>src/main.rs</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u518D<code>Cargo.toml</code>\u6587\u4EF6\u91CC\u52A0\u5165\u9879\u76EE\u4F9D\u8D56</p><div class="language-toml ext-toml line-numbers-mode"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token key property">reqwest</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.11&quot;</span><span class="token punctuation">,</span> <span class="token key property">features</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;blocking&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token key property">html2md</span> <span class="token punctuation">=</span> <span class="token string">&quot;0.2&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),r=n("code",null,"Cargo.toml",-1),k=s(" \u662F Rust \u9879\u76EE\u7684\u914D\u7F6E\u7BA1\u7406\u6587\u4EF6\uFF0C\u6211\u4EEC\u6DFB\u52A0\u4E86 2 \u4E2A\u4F9D\u8D56\uFF0C"),d={href:"https://github.com/seanmonstar/reqwest",target:"_blank",rel:"noopener noreferrer"},v=s("reqwest"),m=s(" \u662F\u4E00\u4E2A HTTP \u5BA2\u6237\u7AEF\uFF0C\u5B83\u7684\u4F7F\u7528\u65B9\u5F0F\u548C Python \u4E0B\u7684 request \u7C7B\u4F3C\uFF1Bhtml2md \u987E\u540D\u601D\u4E49\uFF0C\u628A HTML \u6587\u672C\u8F6C\u6362\u6210 Markdown\u3002"),b=a(`<p>\u5728<code>src/main.rs</code>\u7F16\u5199\u4EE3\u7801</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>fs<span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;https://www.rust-lang.org/&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&quot;rust.md&quot;</span><span class="token punctuation">;</span>

  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Fetching url: {}&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token namespace">reqwest<span class="token punctuation">::</span>blocking<span class="token punctuation">::</span></span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Converting html to markdown...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> md <span class="token operator">=</span> <span class="token namespace">html2md<span class="token punctuation">::</span></span><span class="token function">parse_html</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token namespace">fs<span class="token punctuation">::</span></span><span class="token function">write</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> md<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Converted markdown has been saved in {}.&quot;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4FDD\u5B58\u540E\uFF0C\u5728\u547D\u4EE4\u884C\u4E0B\u6267\u884C<code>cargo build &amp;&amp; cargo run</code>\u5728\u6F2B\u957F\u7684\u7F16\u8BD1\u540E\uFF0C\u7A0B\u5E8F\u5F00\u59CB\u8FD0\u884C\uFF0C\u5C31\u4F1A\u770B\u5230\u5982\u4E0B\u8F93\u51FA\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Fetching url: https://www.rust-lang.org/
Converting html to markdown<span class="token punctuation">..</span>.
Converted markdown has been saved <span class="token keyword">in</span> rust.md.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u4F1A\u9644\u5E26\u751F\u6210\u4E00\u4E2A<code>rust.md</code>\u6587\u4EF6\uFF0C\u8FD9\u4E2A\u5C31\u662F\u5C06<code>rust</code>\u5B98\u7F51\u7684<code>html</code>\u8F6C\u6362\u4E3A\u4E86\u4E00\u4E2A<code>markdown</code>\u6587\u4EF6\u3002</p><hr><p>\u57FA\u7840\u7C7B\u578B\u548C\u4E00\u4E9B\u7EC3\u4E60</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>fs<span class="token punctuation">;</span>

<span class="token keyword">fn</span> <span class="token function-definition function">apply</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> <span class="token keyword">fn</span><span class="token punctuation">(</span><span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    <span class="token function">f</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">square</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    value <span class="token operator">*</span> value
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">cube</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
    value <span class="token operator">*</span> value <span class="token operator">*</span> value
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">pi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">f64</span> <span class="token punctuation">{</span>
    <span class="token number">3.141592653</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">not_pi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token number">3.1415</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token string">&quot;https://www.rust-lang.org/&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> output <span class="token operator">=</span> <span class="token string">&quot;rust.md&quot;</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Fetching url: {}&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> body <span class="token operator">=</span> <span class="token namespace">reqwest<span class="token punctuation">::</span>blocking<span class="token punctuation">::</span></span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Converting html to markdown&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> md <span class="token operator">=</span> <span class="token namespace">html2md<span class="token punctuation">::</span></span><span class="token function">parse_html</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token namespace">fs<span class="token punctuation">::</span></span><span class="token function">write</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> md<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Converted to Markdown: {}&quot;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;apply square: {}&quot;</span><span class="token punctuation">,</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> square<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;apply cube: {}&quot;</span><span class="token punctuation">,</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> cube<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> is_pi <span class="token operator">=</span> <span class="token function">pi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> is_unit1 <span class="token operator">=</span> <span class="token function">not_pi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> is_unit2 <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token function">pi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;is_pi: {:?}, is_unit1: {:?}, is_unit2: {:?}&quot;</span><span class="token punctuation">,</span>
        is_pi<span class="token punctuation">,</span> is_unit1<span class="token punctuation">,</span> is_unit2
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u279C  scrape_url git:<span class="token punctuation">(</span>master<span class="token punctuation">)</span> \u2717 cargo build <span class="token operator">&amp;&amp;</span> cargo run
   Compiling scrape_url v0.1.0 <span class="token punctuation">(</span>/Users/wujie/workspace/rustworkspace/scrape_url<span class="token punctuation">)</span>
    Finished dev <span class="token punctuation">[</span>unoptimized + debuginfo<span class="token punctuation">]</span> target<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token number">0</span>.53s
    Finished dev <span class="token punctuation">[</span>unoptimized + debuginfo<span class="token punctuation">]</span> target<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token number">0</span>.06s
     Running <span class="token variable"><span class="token variable">\`</span>target/debug/scrape_url<span class="token variable">\`</span></span>
Fetching url: https://www.rust-lang.org/
Converting html to markdown
Converted to Markdown: rust.md
apply square: <span class="token number">4</span>
apply cube: <span class="token number">8</span>
is_pi: <span class="token number">3.141592653</span>, is_unit1: <span class="token punctuation">(</span><span class="token punctuation">)</span>, is_unit2: <span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u6570\u636E\u7ED3\u6784</h2><blockquote><p>\u6570\u636E\u7ED3\u6784\u662F\u7A0B\u5E8F\u7684\u6838\u5FC3\u7EC4\u6210\u90E8\u5206\uFF0C\u5728\u5BF9\u590D\u6742\u7684\u95EE\u9898\u8FDB\u884C\u5EFA\u6A21\u65F6\uFF0C\u6211\u4EEC\u5C31\u8981\u81EA\u5B9A\u4E49\u6570\u636E\u7ED3\u6784\u3002Rust \u975E\u5E38\u5F3A\u5927\uFF0C\u53EF\u4EE5\u7528 struct \u5B9A\u4E49\u7ED3\u6784\u4F53\uFF0C\u7528 enum \u5B9A\u4E49\u6807\u7B7E\u8054\u5408\u4F53\uFF08tagged union\uFF09\uFF0C\u8FD8\u53EF\u4EE5\u50CF Python \u4E00\u6837\u968F\u624B\u5B9A\u4E49\u5143\u7EC4\uFF08tuple\uFF09\u7C7B\u578B\u3002</p></blockquote><p>\u5B9A\u4E49\u4E00\u4E2A\u804A\u5929\u670D\u52A1\u7684\u6570\u636E\u7ED3\u6784</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">enum</span> <span class="token type-definition class-name">Gender</span> <span class="token punctuation">{</span>
    <span class="token class-name">Unspecified</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token class-name">Female</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token class-name">Male</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Debug, Copy, Clone)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">UserId</span><span class="token punctuation">(</span><span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token attribute attr-name">#[derive(Debug, Copy, Clone)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">TopicId</span><span class="token punctuation">(</span><span class="token keyword">u64</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">User</span> <span class="token punctuation">{</span>
    id<span class="token punctuation">:</span> <span class="token class-name">UserId</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    gender<span class="token punctuation">:</span> <span class="token class-name">Gender</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">Topic</span> <span class="token punctuation">{</span>
    id<span class="token punctuation">:</span> <span class="token class-name">TopicId</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    owner<span class="token punctuation">:</span> <span class="token class-name">UserId</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5B9A\u4E49\u804A\u5929\u5BA4\u4E2D\u53EF\u80FD\u53D1\u751F\u7684\u4E8B\u4EF6</span>
<span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">enum</span> <span class="token type-definition class-name">Event</span> <span class="token punctuation">{</span>
    <span class="token class-name">Join</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">UserId</span><span class="token punctuation">,</span> <span class="token class-name">TopicId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">Leave</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">UserId</span><span class="token punctuation">,</span> <span class="token class-name">TopicId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">UserId</span><span class="token punctuation">,</span> <span class="token class-name">TopicId</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> alice <span class="token operator">=</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        id<span class="token punctuation">:</span> <span class="token class-name">UserId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        gender<span class="token punctuation">:</span> <span class="token class-name">Gender</span><span class="token punctuation">::</span><span class="token class-name">Female</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> bob <span class="token operator">=</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        id<span class="token punctuation">:</span> <span class="token class-name">UserId</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        gender<span class="token punctuation">:</span> <span class="token class-name">Gender</span><span class="token punctuation">::</span><span class="token class-name">Male</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">let</span> topic <span class="token operator">=</span> <span class="token class-name">Topic</span> <span class="token punctuation">{</span>
        id<span class="token punctuation">:</span> <span class="token class-name">TopicId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">&quot;rust&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        owner<span class="token punctuation">:</span> <span class="token class-name">UserId</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> event1 <span class="token operator">=</span> <span class="token class-name">Event</span><span class="token punctuation">::</span><span class="token class-name">Join</span><span class="token punctuation">(</span><span class="token punctuation">(</span>alice<span class="token punctuation">.</span>id<span class="token punctuation">,</span> topic<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> event2 <span class="token operator">=</span> <span class="token class-name">Event</span><span class="token punctuation">::</span><span class="token class-name">Join</span><span class="token punctuation">(</span><span class="token punctuation">(</span>bob<span class="token punctuation">.</span>id<span class="token punctuation">,</span> topic<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> event3 <span class="token operator">=</span> <span class="token class-name">Event</span><span class="token punctuation">::</span><span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token punctuation">(</span>alice<span class="token punctuation">.</span>id<span class="token punctuation">,</span> topic<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token string">&quot;Hello world!&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span>
        <span class="token string">&quot;event1: {:?}, event2: {:?}, event3: {:?}&quot;</span><span class="token punctuation">,</span>
        event1<span class="token punctuation">,</span> event2<span class="token punctuation">,</span> event3
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13);function g(f,w){const t=e("ExternalLinkIcon");return o(),c("div",null,[l,n("p",null,[r,k,n("a",d,[v,i(t)]),m]),b])}var q=p(u,[["render",g],["__file","first-rust-code.html.vue"]]);export{q as default};
