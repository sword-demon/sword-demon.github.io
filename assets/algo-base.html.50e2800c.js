import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";import{o as e,c as t,e as s,a as n}from"./app.660d6769.js";const p={},l=s(`<h2 id="\u7B80\u5355\u5224\u65AD\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u5224\u65AD\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u7B80\u5355\u5224\u65AD\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6</h2><ul><li><p>\u786E\u5B9A\u95EE\u9898\u89C4\u6A21 n</p></li><li><p>\u5FAA\u73AF\u51CF\u534A\u8FC7\u7A0B <code>logn</code></p></li><li><p>k \u5C42\u5173\u4E8E n \u7684\u5FAA\u73AF n<sup>k</sup>(\u8FD9\u8FB9\u662F n \u7684 k \u6B21\u65B9\uFF0C\u53EF\u80FD\u6E32\u67D3\u4E0A\u6709\u95EE\u9898)</p></li><li><p>\u590D\u6742\u60C5\u51B5\uFF1A\u6839\u636E\u7B97\u6CD5\u7684\u6267\u884C\u8FC7\u7A0B\u5224\u65AD</p></li><li><p>\u7528\u5E38\u6570 1 \u53D6\u4EE3\u8FD0\u884C\u65F6\u95F4\u4E2D\u7684\u6240\u6709\u52A0\u6CD5\u5E38\u6570</p></li><li><p>\u5728\u4FEE\u6539\u540E\u7684\u8FD0\u884C\u6B21\u6570\u51FD\u6570\u4E2D\uFF0C\u53EA\u4FDD\u7559\u6700\u9AD8\u9636\u9879</p></li><li><p>\u5982\u679C\u6700\u9AD8\u9636\u9879\u5B58\u5728\u4E14\u4E0D\u662F 1 \uFF0C\u5219\u53BB\u9664\u4E0E\u8FD9\u4E2A\u9879\u76F8\u4E58\u7684\u5E38\u6570</p></li><li><p>\u5F97\u5230\u7684\u6700\u540E\u7ED3\u679C\u5C31\u662F\u5927<code>O</code>\u9636</p></li></ul><h3 id="\u5E38\u6570\u9636" tabindex="-1"><a class="header-anchor" href="#\u5E38\u6570\u9636" aria-hidden="true">#</a> \u5E38\u6570\u9636</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
sum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">*</span>n<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A\uFF1A<code>O(1)</code>\uFF0C\u4E0D\u80FD\u8BA4\u4E3A\u6709\u591A\u5C11\u6761\u8BED\u53E5\u5C31\u6709\u591A\u5C11\u3002</p><h3 id="\u7EBF\u6027\u9636" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u6027\u9636" aria-hidden="true">#</a> \u7EBF\u6027\u9636</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> i<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\uFF0C\u5B83\u7684\u5FAA\u73AF\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A<code>O(n)</code>\uFF0C\u56E0\u4E3A\u5FAA\u73AF\u4F53\u4E2D\u7684\u4EE3\u7801\u9700\u8981\u6267\u884C<code>n</code>\u6B21</p><h3 id="\u5E73\u65B9\u9636" tabindex="-1"><a class="header-anchor" href="#\u5E73\u65B9\u9636" aria-hidden="true">#</a> \u5E73\u65B9\u9636</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801 2 \u6B21\u5FAA\u73AF\u6267\u884C\u4E86<code>n\xB2</code>\u5373\u8FD9\u6BB5\u4EE3\u7801\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A<code>O(n\xB2)</code></p><p>\u4FEE\u6539\u4E00\u4E0B\uFF1A</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;hello world\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53<code>i = 0</code>\uFF0C\u5185\u5FAA\u73AF\u6267\u884C\u4E86<code>n</code>\u6B21\uFF0C\u5F53<code>i = 1</code>\u65F6\uFF0C\u5185\u5FAA\u73AF\u5219\u6267\u884C<code>n-1</code>\u6B21\uFF0C\u5F53<code>i = n - 1</code>\u65F6\uFF0C\u5185\u5FAA\u73AF\u6267\u884C\u4E86 1 \u6B21\uFF0C\u6240\u4EE5\u603B\u7684\u6267\u884C\u6B21\u6570\u5E94\u8BE5\u662F\uFF1A</p>`,14),o=n("p",{class:"katex-block"},[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("semantics",null,[n("mrow",null,[n("mi",null,"n"),n("mo",null,"+"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",null,"\u2212"),n("mn",null,"2"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mi",{mathvariant:"normal"},"."),n("mo",null,"+"),n("mn",null,"1"),n("mo",null,"="),n("mi",null,"n"),n("mo",{stretchy:"false"},"("),n("mi",null,"n"),n("mo",null,"+"),n("mn",null,"1"),n("mo",{stretchy:"false"},")"),n("mi",{mathvariant:"normal"},"/"),n("mn",null,"2")]),n("annotation",{encoding:"application/x-tex"},"n + (n - 1) + (n - 2) + ... + 1 = n(n + 1) / 2 ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),n("span",{class:"mord"},"..."),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mord"},"/2")])])])])],-1),c=s(`<p>\u5373\u9AD8\u65AF\u5148\u751F\u7684\u7B49\u5DEE\u6570\u5217\u7B97\u6CD5\uFF0C\u4F7F\u7528\u63A8\u5BFC\u653B\u7565\uFF0C\u7B2C\u4E00\u6761\u5FFD\u7565\uFF0C\u56E0\u4E3A\u6CA1\u6709\u5E38\u6570\uFF1B\u7B2C\u4E8C\u6761\u53EA\u4FDD\u7559\u6700\u9AD8\u9879\uFF0C\u6240\u4EE5<code>n/2</code>\u8FD9\u9879\u53BB\u6389\uFF1B\u7B2C\u4E09\u6761\uFF0C\u53BB\u9664\u4E0E\u6700\u9AD8\u9879\u76F8\u4E58\u7684\u5E38\u6570\uFF0C\u6700\u7EC8\u5F97\u5230<code>O(n\xB2)</code></p><h3 id="\u5BF9\u6570\u9636" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u6570\u9636" aria-hidden="true">#</a> \u5BF9\u6570\u9636</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> n<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    i <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u6B21<code>i*2</code>\u4E4B\u540E\uFF0C\u5C31\u4F1A\u8DDD\u79BB<code>n</code>\u66F4\u8FD1\u4E00\u70B9\uFF0C\u5047\u8BBE\u6709<code>x</code>\u4E2A 2 \u76F8\u4E58\u540E\u5927\u4E8E\u6216\u7B49\u4E8E<code>n</code>\u5219\u4F1A\u9000\u51FA\u5FAA\u73AF</p><p>\u4E8E\u662F\u7531<code>2^x = n</code>\u5F97\u5230<code>x = log(2)n</code>\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u5FAA\u73AF\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A<code>O(logn)</code></p><h3 id="\u4E3E\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4E3E\u4F8B" aria-hidden="true">#</a> \u4E3E\u4F8B</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>n<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token function">function</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>1 + n + n^2 + n^2 \u5373\uFF1A<code>O(n\xB2)</code></p><h3 id="\u5E38\u89C1\u7684\u65F6\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u5E38\u89C1\u7684\u65F6\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u5E38\u89C1\u7684\u65F6\u95F4\u590D\u6742\u5EA6</h3><table><thead><tr><th style="text-align:center;">\u4F8B\u5B50</th><th style="text-align:center;">\u65F6\u95F4\u590D\u6742\u5EA6</th><th style="text-align:center;">\u672F\u8BED</th></tr></thead><tbody><tr><td style="text-align:center;">5201314</td><td style="text-align:center;">O(1)</td><td style="text-align:center;">\u5E38\u6570\u9636</td></tr><tr><td style="text-align:center;">3n+4</td><td style="text-align:center;">O(n)</td><td style="text-align:center;">\u7EBF\u6027\u9636</td></tr><tr><td style="text-align:center;">3n^2+4n+5</td><td style="text-align:center;">O(n^2)</td><td style="text-align:center;">\u5E73\u65B9\u9636</td></tr><tr><td style="text-align:center;">3log(2)n + 4</td><td style="text-align:center;">O(logn)</td><td style="text-align:center;">\u5BF9\u6570\u9636</td></tr><tr><td style="text-align:center;">2n + 3nlog(2)n + 14</td><td style="text-align:center;">O(nlogn)</td><td style="text-align:center;">nlogn \u9636</td></tr><tr><td style="text-align:center;">n^3+ 2n^2 + 4n + 6</td><td style="text-align:center;">O(n^3)</td><td style="text-align:center;">\u7ACB\u65B9\u9636</td></tr><tr><td style="text-align:center;">2^n</td><td style="text-align:center;">O(2^n)</td><td style="text-align:center;">\u6307\u6570\u9636</td></tr></tbody></table><h2 id="\u7B97\u6CD5\u521D\u4F53\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u521D\u4F53\u9A8C" aria-hidden="true">#</a> \u7B97\u6CD5\u521D\u4F53\u9A8C</h2><p>\u7B49\u5DEE\u6570\u5217\u7684\u5B9E\u73B0</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> sum<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
    sum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u7B97\u6CD5\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u7279\u6027" aria-hidden="true">#</a> \u7B97\u6CD5\u7279\u6027</h2><ul><li><p>\u8F93\u5165</p><blockquote><p>\u7B97\u6CD5\u5177\u6709 0 \u4E2A\u8F93\u5165\u6216\u591A\u4E2A\u8F93\u5165</p></blockquote></li><li><p>\u8F93\u51FA</p><ul><li>\u7B97\u6CD5\u81F3\u5C11\u6709\u4E00\u4E2A\u6216\u591A\u4E2A\u8F93\u51FA</li></ul></li><li><p>\u6709\u7A77\u6027\uFF1A</p><ul><li>\u7B97\u6CD5\u5728\u6267\u884C\u6709\u9650\u7684\u6B65\u9AA4\u4E4B\u540E\uFF0C\u81EA\u52A8\u7ED3\u675F\u800C\u4E0D\u4F1A\u51FA\u73B0\u65E0\u9650\u5FAA\u73AF\uFF0C\u5E76\u4E14\u6BCF\u4E00\u4E2A\u6B65\u9AA4\u5728\u53EF\u63A5\u53D7\u7684\u65F6\u95F4\u5185\u5B8C\u6210\u3002</li></ul></li><li><p>\u786E\u5B9A\u6027\uFF1A</p><ul><li>\u7B97\u6CD5\u7684\u6BCF\u4E00\u4E2A\u6B65\u9AA4\u90FD\u5177\u6709\u786E\u5B9A\u7684\u542B\u4E49\uFF0C\u4E0D\u4F1A\u51FA\u73B0\u4E8C\u4E49\u6027</li><li>\u7B97\u6CD5\u5728\u4E00\u5B9A\u6761\u4EF6\u4E0B\uFF0C\u53EA\u6709\u4E00\u4E2A\u6267\u884C\u8DEF\u5F84\uFF0C\u76F8\u540C\u7684\u8F93\u5165\u53EA\u80FD\u6709\u552F\u4E00\u7684\u8F93\u51FA\u7ED3\u679C</li><li>\u7B97\u6CD5\u7684\u6BCF\u4E2A\u6B65\u9AA4\u90FD\u5E94\u8BE5\u88AB\u7CBE\u786E\u5B9A\u4E49\u800C\u65E0\u6B67\u4E49</li></ul></li><li><p>\u53EF\u884C\u6027\uFF1A</p><ul><li>\u7B97\u6CD5\u7684\u6BCF\u4E00\u6B65\u9AA4\u90FD\u5FC5\u987B\u662F\u53EF\u884C\u7684\uFF0C\u4E0D\u80FD\u6709\u542B\u7CCA\u5176\u8F9E\uFF0C\u4E5F\u5C31\u662F\u6BCF\u4E00\u6B65\u90FD\u80FD\u591F\u901A\u8FC7\u6267\u884C\u6709\u9650\u6B21\u6570\u5B8C\u6210</li></ul></li></ul><h2 id="\u7B97\u6CD5\u8BBE\u8BA1\u7684\u8981\u6C42" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5\u8BBE\u8BA1\u7684\u8981\u6C42" aria-hidden="true">#</a> \u7B97\u6CD5\u8BBE\u8BA1\u7684\u8981\u6C42</h2><ol><li>\u6B63\u786E\u6027 <ul><li>\u7B97\u6CD5\u7684\u6B63\u786E\u6027\u662F\u6307\u7B97\u6CD5\u81F3\u5C11\u5E94\u8BE5\u5177\u6709\u8F93\u5165\u3001\u8F93\u51FA\u548C\u52A0\u5DE5\u5904\u7406\u65E0\u6B67\u4E49\u6027\u3001\u80FD\u6B63\u786E\u53CD\u6620\u95EE\u9898\u7684\u9700\u6C42\u3001\u80FD\u5F97\u5230\u95EE\u9898\u7684\u6B63\u786E\u7B54\u6848</li><li>\u5927\u4F53\u5206\u4E3A\u56DB\u4E2A\u5C42\u6B21\uFF1A <ul><li>\u7B97\u6CD5\u7A0B\u5E8F\u6CA1\u6709\u8BED\u6CD5\u9519\u8BEF</li><li>\u7B97\u6CD5\u7A0B\u5E8F\u5BF9\u5408\u6CD5\u7684\u8F93\u5165\u80FD\u591F\u4EA7\u751F\u6EE1\u8DB3\u8981\u6C42\u7684\u8F93\u51FA</li><li>\u7B97\u6CD5\u7A0B\u5E8F\u5BF9\u4E8E\u975E\u6CD5\u8F93\u5165\u80FD\u591F\u4EA7\u751F\u6EE1\u8DB3\u89C4\u683C\u7684\u8BF4\u660E</li><li>\u7B97\u6CD5\u7A0B\u5E8F\u5BF9\u4E8E\u6545\u610F\u5201\u96BE\u7684\u6D4B\u8BD5\u8F93\u5165\u90FD\u6709\u6EE1\u8DB3\u8981\u6C42\u7684\u8F93\u51FA\u7ED3\u679C</li></ul></li></ul></li><li>\u53EF\u8BFB\u6027 <ul><li>\u7B97\u6CD5\u7684\u8BBE\u8BA1\u53E6\u4E00\u4E2A\u76EE\u7684\u662F\u4E3A\u4E86\u4FBF\u4E8E\u9605\u8BFB\u3001\u7406\u89E3\u548C\u4EA4\u6D41</li></ul></li><li>\u5065\u58EE\u6027 <ul><li>\u5F53\u8F93\u5165\u6570\u636E\u4E0D\u5408\u6CD5\u65F6\uFF0C\u7B97\u6CD5\u4E5F\u80FD\u505A\u51FA\u76F8\u5173\u5904\u7406\uFF0C\u800C\u4E0D\u662F\u4EA7\u751F\u5F02\u5E38\u3001\u5D29\u6E83\u6216\u83AB\u540D\u5176\u5999\u7684\u7ED3\u679C</li></ul></li><li>\u65F6\u95F4\u6548\u7387\u9AD8\u548C\u5B58\u50A8\u91CF\u4F4E</li></ol><h2 id="\u7A7A\u95F4\u590D\u6742\u5EA6" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u95F4\u590D\u6742\u5EA6" aria-hidden="true">#</a> \u7A7A\u95F4\u590D\u6742\u5EA6</h2><blockquote><p>\u7528\u6765\u8BC4\u4F30\u7B97\u6CD5\u5185\u5B58\u5360\u7528\u5927\u5C0F\u7684\u5F0F\u5B50</p></blockquote><p>\u7A7A\u95F4\u590D\u6742\u5EA6\u7684\u8868\u793A\u65B9\u5F0F\u548C\u65F6\u95F4\u590D\u6742\u5EA6\u5B8C\u5168\u4E00\u6837</p><ul><li>\u7B97\u6CD5\u4F7F\u7528\u4E86\u51E0\u4E2A\u53D8\u91CF\uFF1AO(1)</li><li>\u7B97\u6CD5\u4F7F\u7528\u4E86\u957F\u5EA6\u4E3A n \u7684\u4E00\u7EF4\u5217\u8868\uFF1AO(n)</li><li>\u7B97\u6CD5\u4F7F\u7528\u4E86 m \u884C n \u5217\u7684\u4E8C\u7EF4\u5217\u8868\uFF1AO(mn)</li></ul><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u73B0\u5728\u4E00\u822C\u6765\u8BF4\u65F6\u95F4\u590D\u6742\u5EA6\u6BD4\u8F83\u91CD\u8981</p><p>\u6240\u4EE5\u5927\u90E8\u5206\u7B97\u6CD5\u90FD\u6709\u4E00\u4E2A\u8BF4\u6CD5\uFF1A\u201C\u7A7A\u95F4\u6362\u65F6\u95F4\u201D\uFF0C\u6BD4\u5982\uFF1A\u5206\u5E03\u5F0F\u7684\u4E00\u4E2A\u8FD0\u7B97\u3002</p></div><p>\u7B2C\u4E00\u79CD\u7B97\u6CD5\u6267\u884C\u4E86 1+(n+1)+n = 2n + 2 \u6B21</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> i<span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u4E861\u6B21</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">// \u6267\u884C\u4E86n + 1 \u6B21</span>
<span class="token punctuation">{</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> i<span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u4E86n\u6B21</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u79CD\u7B97\u6CD5\u6267\u884C\u4E86 1+1=2 \u6B21</p><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u4E861\u6B21</span>
sum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C\u4E861\u6B21</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570\u7684\u6E10\u8FDB\u5F0F\u589E\u957F" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7684\u6E10\u8FDB\u5F0F\u589E\u957F" aria-hidden="true">#</a> \u51FD\u6570\u7684\u6E10\u8FDB\u5F0F\u589E\u957F</h2><blockquote><p>\u5224\u65AD\u4E00\u4E2A\u7B97\u6CD5\u7684\u6548\u7387\u65F6\uFF0C\u51FD\u6570\u4E2D\u7684\u5E38\u6570\u548C\u5176\u4ED6\u6B21\u8981\u9879\u5E38\u5E38\u53EF\u4EE5\u5FFD\u7565\uFF0C\u800C\u66F4\u5E94\u8BE5\u5173\u6CE8\u4E3B\u9879(\u6700\u9AD8\u9879)\u7684\u9636\u6570</p></blockquote><h2 id="\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52</h2><p>\u4E24\u4E2A\u7279\u70B9\uFF1A</p><ul><li>\u8C03\u7528\u81EA\u8EAB</li><li>\u7ED3\u675F\u6761\u4EF6</li></ul><h3 id="\u56DB\u4E2A\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u56DB\u4E2A\u793A\u4F8B" aria-hidden="true">#</a> \u56DB\u4E2A\u793A\u4F8B</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">func1</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
    func1<span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u7B2C\u4E00\u4E2A\u6CA1\u6709\u7ED3\u675F\u6761\u4EF6\uFF01</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">func2</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">0</span>\uFF1A
    	<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        func2<span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u770B\u4F3C\u52A0\u4E86\u7ED3\u675F\u6761\u4EF6\uFF0C\u4F46\u662F\u9012\u5F52\u6761\u4EF6\u662F+1\uFF0C\u4E0D\u4F1A\u6709\u5C0F\u4E8E 0 \u7684\u65F6\u5019</p></blockquote><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">func3</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        func3<span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u8FD9\u662F\u4E00\u4E2A\u5408\u6CD5\u7684\u9012\u5F52\u3002</p></blockquote><details class="custom-container details"><summary>\u6848\u4F8B</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">3</span> <span class="token comment"># \u4F20\u5165</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>\u8F93\u51FA\u7ED3\u679C
<span class="token number">3</span>
<span class="token number">2</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/sword-demon/image_store/blog/image-20211016213416730.png" alt="" loading="lazy"></p></details><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">func4</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        func4<span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6B64\u51FD\u6570\u662F\u5148\u9012\u5F52\u540E\u6253\u5370\uFF0C\u51FD\u6570\u6267\u884C\u8FC7\u7A0B\u8FD8\u662F\u4ECE\u4E0A\u5F80\u4E0B\u7684\u3002</p></blockquote><details class="custom-container details"><summary>\u6848\u4F8B</summary><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">3</span> <span class="token comment"># \u4F20\u5165x = 3</span>

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>\u8F93\u51FA
<span class="token number">1</span>
<span class="token number">2</span>
<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/sword-demon/image_store/blog/image-20211016214151362.png" alt="" loading="lazy"></p></details><h3 id="\u6C49\u8BFA\u5854\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u6C49\u8BFA\u5854\u95EE\u9898" aria-hidden="true">#</a> \u6C49\u8BFA\u5854\u95EE\u9898</h3><p>\u7531\u6765</p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u5927\u68B5\u5929\u521B\u9020\u4E16\u754C\u7684\u65F6\u5019\u505A\u4E86 3 \u6839\u91D1\u521A\u77F3\u67F1\u5B50\uFF0C\u5728\u4E00\u6839\u67F1\u5B50\u4E0A\u4ECE\u4E0B\u5F80\u4E0A\u6309\u7167\u5927\u5C0F\u987A\u5E8F\u645E\u7740 64 \u7247\u9EC4\u91D1\u5706\u76D8\u3002</p><p>\u4ED6\u547D\u4EE4\u5A46\u7F57\u95E8\u628A\u5706\u76D8\u4ECE\u4E0B\u9762\u5F00\u59CB\u6309\u5927\u5C0F\u987A\u5E8F\u91CD\u65B0\u6446\u653E\u5728\u53E6\u4E00\u6839\u67F1\u5B50\u4E0A\u3002</p><p>\u5728\u5C0F\u5706\u76D8\u4E0A\u4E0D\u80FD\u653E\u5927\u5706\u76D8\uFF0C\u5728\u4E09\u6839\u67F1\u5B50\u4E4B\u95F4\u4E00\u6B21\u53EA\u80FD\u79FB\u52A8\u4E00\u4E2A\u5706\u76D8\u3002</p><p>64 \u6839\u67F1\u5B50\u79FB\u52A8\u5B8C\u6BD5\u4E4B\u65E5\uFF0C\u5C31\u662F <strong>\u4E16\u754C\u6BC1\u706D\u4E4B\u65F6</strong>\u3002</p></div><p><img src="https://cdn.jsdelivr.net/gh/sword-demon/image_store/blog/image-20211016214522745.png" alt="" loading="lazy"></p><p>\u8FD9\u91CC\u628A\u5706\u76D8\u7684\u4E2A\u6570\u8BB0\u4F5C\uFF1An</p><p>\u4E09\u4E2A\u67F1\u5B50\u5206\u522B\u4EE3\u8868\uFF1AA,B,C</p><hr><p>n = 2 \u65F6</p><ul><li>\u628A\u5C0F\u5706\u76D8\u4ECE A \u79FB\u52A8\u5230 B</li><li>\u628A\u5927\u5706\u76D8\u4ECE A \u79FB\u52A8\u5230 C</li><li>\u628A\u5C0F\u5706\u76D8\u4ECE B \u79FB\u52A8\u5230 C</li></ul><hr><p>n \u4E2A\u76D8\u5B50\u65F6\uFF1A</p><ol><li>\u628A n-1 \u4E2A\u76D8\u5B50\u4ECE A \u7ECF\u8FC7 C \u79FB\u52A8\u5230 B</li><li>\u628A\u7B2C n \u4E2A\u76D8\u5B50\u4ECE A \u79FB\u52A8\u5230 C</li><li>\u628A n-1 \u4E2A\u76D8\u5B50\u4ECE B \u7ECF\u8FC7 A \u79FB\u52A8\u5230 C</li></ol><p>\u4EE3\u7801\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># -*- coding: utf8 -*-</span>
<span class="token comment"># @Time    : 2021/10/16 21:52</span>
<span class="token comment"># @Author  : wxvirus</span>
<span class="token comment"># @File    : hanoi.py</span>
<span class="token comment"># @Software: PyCharm</span>
<span class="token comment"># \u6C49\u8BFA\u5854\u7B97\u6CD5</span>

<span class="token keyword">def</span> <span class="token function">hanoi</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    \u6C49\u8BFA\u5854\u7B97\u6CD5
    \u9012\u5F52\u7EC8\u6B62\u6761\u4EF6 n = 0 \u6CA1\u6709\u76D8\u5B50\u4E86
    \u9ED8\u8BA4\u53C2\u6570\u662F\u4ECEa\u7ECF\u8FC7b\u5230c
    :param n: \u76D8\u5B50\u4E2A\u6570
    :param a: \u7B2C\u4E00\u4E2A\u67F1\u5B50
    :param b: \u7B2C\u4E8C\u4E2A\u67F1\u5B50
    :param c: \u7B2C\u4E09\u4E2A\u67F1\u5B50
    :return:
    &quot;&quot;&quot;</span>
    <span class="token keyword">if</span> n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        hanoi<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;moving from {} to {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
        hanoi<span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">,</span> c<span class="token punctuation">)</span>


hanoi<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u8FD9\u91CC\u662F\u4E00\u4E2A\u6570\u5B66\u516C\u5F0F\u554A\uFF0C\u56E0\u4E3A<code>vuepress</code>\u6211\u8FD8\u4E0D\u4F1A\u6574\u5982\u4F55\u663E\u793A\u6570\u5B66\u516C\u5F0F\u7684\uFF0C\u53EF\u80FD\u4E0B\u9762\u7684\u4F1A\u591A\u51FA\u6765\u51E0\u4E2A\u7F8E\u5143\u7B26\u3002\u8FD9\u91CC\u518D\u5199\u4E00\u4E2A\u6CA1\u6709\u7F8E\u5143\u7B26\u7684\uFF1A</p><p><code>h(x) = 2h(x - 1) + 1</code></p></blockquote><p><strong>\u6C49\u8BFA\u5854\u79FB\u52A8\u6B21\u6570\u7684\u9012\u63A8\u5F0F\uFF1A</strong></p>`,58),i=n("p",{class:"katex-block"},[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("semantics",null,[n("mrow",null,[n("mi",null,"h"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",{stretchy:"false"},")"),n("mo",null,"="),n("mn",null,"2"),n("mi",null,"h"),n("mo",{stretchy:"false"},"("),n("mi",null,"x"),n("mo",null,"\u2212"),n("mn",null,"1"),n("mo",{stretchy:"false"},")"),n("mo",null,"+"),n("mn",null,"1")]),n("annotation",{encoding:"application/x-tex"},"h(x) = 2h(x - 1) + 1 ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"2"),n("span",{class:"mord mathnormal"},"h"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"\u2212"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord"},"1"),n("span",{class:"mclose"},")"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"1")])])])])],-1),u=s(`<p><em>\u5047\u8BBE\u5A46\u7F57\u95E8\u6BCF\u79D2\u949F\u642C\u4E00\u4E2A\u76D8\u5B50\uFF0C\u5219\u603B\u5171\u9700\u8981 5800 \u4EBF\u5E74\uFF01</em></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># n = 3\u8F93\u51FA\u7ED3\u679C</span>

moving <span class="token keyword">from</span> A to C
moving <span class="token keyword">from</span> A to B
moving <span class="token keyword">from</span> C to B
moving <span class="token keyword">from</span> A to C
moving <span class="token keyword">from</span> B to A
moving <span class="token keyword">from</span> B to C
moving <span class="token keyword">from</span> A to C
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u753B\u56FE\u7406\u89E3\u6B65\u9AA4</summary><p><img src="https://cdn.jsdelivr.net/gh/sword-demon/image_store/blog/image-20211016220840224.png" alt="" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/sword-demon/image_store/blog/image-20211016220918065.png" alt="" loading="lazy"></p><p><img src="https://sword-demon.github.io/vue-blog/assets/images/image-20211016220947230.png" alt="" loading="lazy"></p><p><img src="https://sword-demon.github.io/vue-blog/assets/images/image-20211016221020257.png" alt="C_B" loading="lazy"></p><p><img src="https://sword-demon.github.io/vue-blog/assets/images/image-20211016221042877.png" alt="A_C" loading="lazy"></p><p><img src="https://sword-demon.github.io/vue-blog/assets/images/image-20211016221105167.png" alt="B_A" loading="lazy"></p><p><img src="https://sword-demon.github.io/vue-blog/assets/images/image-20211016221128623.png" alt="B_C" loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/sword-demon/image_store/blog/image-20211016221245636.png" alt="" loading="lazy"></p></details><h3 id="c-\u8BED\u8A00\u5B9E\u73B0\u6C49\u8BFA\u5854" tabindex="-1"><a class="header-anchor" href="#c-\u8BED\u8A00\u5B9E\u73B0\u6C49\u8BFA\u5854" aria-hidden="true">#</a> c \u8BED\u8A00\u5B9E\u73B0\u6C49\u8BFA\u5854</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">//</span>
<span class="token comment">// Created by virus on 2022/5/28.</span>
<span class="token comment">//</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>

<span class="token comment">/**
 * \u6C49\u8BFA\u5854
 * @param n the count of plates
 * @param src the source of the plates to move from
 * @param dest the destination of the plates to move to
 * @param tmp the temporary place to use
 */</span>
<span class="token keyword">void</span> <span class="token function">Move</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token keyword">char</span> src<span class="token punctuation">,</span> <span class="token keyword">char</span> dest<span class="token punctuation">,</span> <span class="token keyword">char</span> tmp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c --&gt; %c\\n&quot;</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">Move</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> tmp<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">Move</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">Move</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> tmp<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">Move</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;C&#39;</span><span class="token punctuation">,</span> <span class="token char">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>A --<span class="token operator">&gt;</span> C
A --<span class="token operator">&gt;</span> B
C --<span class="token operator">&gt;</span> B
A --<span class="token operator">&gt;</span> C
B --<span class="token operator">&gt;</span> A
B --<span class="token operator">&gt;</span> C
A --<span class="token operator">&gt;</span> C
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),r=[l,o,c,i,u];function d(m,k){return e(),t("div",null,r)}var g=a(p,[["render",d],["__file","algo-base.html.vue"]]);export{g as default};
