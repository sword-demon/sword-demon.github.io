import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e as t}from"./app.d55bb37b.js";const p={},e=t(`<h2 id="\u51FD\u6570\u4E0E\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4E0E\u95ED\u5305" aria-hidden="true">#</a> \u51FD\u6570\u4E0E\u95ED\u5305</h2><ul><li>\u51FD\u6570\u662F\u4E00\u7B49\u516C\u6C11\uFF1A\u53C2\u6570\u3001\u53D8\u91CF\uFF0C\u8FD4\u56DE\u503C\u90FD\u53EF\u4EE5\u662F\u51FD\u6570</li><li>\u9AD8\u9636\u51FD\u6570</li><li>\u51FD\u6570 -&gt; \u95ED\u5305</li></ul><h3 id="\u6B63\u7EDF-\u51FD\u6570\u5F0F\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6B63\u7EDF-\u51FD\u6570\u5F0F\u7F16\u7A0B" aria-hidden="true">#</a> \u201D\u6B63\u7EDF\u201C\u51FD\u6570\u5F0F\u7F16\u7A0B</h3><ul><li>\u4E0D\u53EF\u53D8\u6027\uFF1A\u4E0D\u80FD\u6709\u72B6\u6001\uFF0C\u53EA\u6709\u5E38\u91CF\u548C\u51FD\u6570</li><li>\u51FD\u6570\u53EA\u80FD\u6709\u4E00\u4E2A\u53C2\u6570</li></ul><p>\u5C0F\u6848\u4F8B\uFF1A\u7D2F\u52A0\u5668\u51FD\u6570</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	sum <span class="token operator">:=</span> <span class="token number">0</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>v <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		sum <span class="token operator">+=</span> v
		<span class="token keyword">return</span> sum
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://gitee.com/wxvirus/img/raw/master/img/20220323214433.png" alt="\u95ED\u5305" loading="lazy"></p><p>\u8FD9\u91CC\uFF0C<code>sum</code>\u662F\u4E00\u4E2A\u81EA\u7531\u53D8\u91CF\uFF0C<code>sum</code>\u53D8\u91CF\u4F1A\u4FDD\u5B58\u5728\u8FD9\u4E2A\u95ED\u5305\u91CC\u3002</p><p>\u7A0D\u5FAE\u6B63\u7EDF\u7684\u51FD\u6570\u5F0F\u5199\u6CD5\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> iAdder <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> iAdder<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">adder2</span><span class="token punctuation">(</span>base <span class="token builtin">int</span><span class="token punctuation">)</span> iAdder <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>v <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> iAdder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> base <span class="token operator">+</span> v<span class="token punctuation">,</span> <span class="token function">adder2</span><span class="token punctuation">(</span>base <span class="token operator">+</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token function">adder2</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> s <span class="token builtin">int</span>
		s<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;0 + 1 + ... + %d = %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> s<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python-\u4E2D\u7684\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#python-\u4E2D\u7684\u95ED\u5305" aria-hidden="true">#</a> python \u4E2D\u7684\u95ED\u5305</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">sum</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">nonlocal</span> <span class="token builtin">sum</span>
        <span class="token builtin">sum</span> <span class="token operator">+=</span> value
        <span class="token keyword">return</span> <span class="token builtin">sum</span>
    <span class="token keyword">return</span> f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>python</code>\u539F\u751F\u652F\u6301\u95ED\u5305</li><li>\u4F7F\u7528<code>__closure__</code>\u6765\u67E5\u8BE2\u95ED\u5305\u5185\u5BB9</li></ul><h3 id="c-\u4E2D\u7684\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#c-\u4E2D\u7684\u95ED\u5305" aria-hidden="true">#</a> C++\u4E2D\u7684\u95ED\u5305</h3><div class="language-c++ ext-c++ line-numbers-mode"><pre class="language-c++"><code>auto adder() {
    auto sum = 0;
    return [=] (int value) mutable {
        sum += value;
        return sum
    };
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8FC7\u53BB\uFF1A<code>STL</code>\u6216\u8005<code>boost</code>\u5E26\u6709\u7C7B\u4F3C\u5E93</li><li>C++11 \u53CA\u4EE5\u540E\uFF1A\u652F\u6301\u95ED\u5305</li></ul><h3 id="java-\u4E2D\u7684\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#java-\u4E2D\u7684\u95ED\u5305" aria-hidden="true">#</a> Java \u4E2D\u7684\u95ED\u5305</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">adder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">Holder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Holder</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> value<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        sum<span class="token punctuation">.</span>value <span class="token operator">+=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>jdk1.8 \u4EE5\u540E\uFF1A\u4F7F\u7528<code>Function</code>\u63A5\u53E3\u548C<code>Lambda</code>\u8868\u8FBE\u5F0F\u6765\u521B\u5EFA\u51FD\u6570\u5BF9\u8C61</li><li>\u533F\u540D\u7C7B\u6216\u8005<code>Lambda</code>\u8868\u8FBE\u5F0F\u5747\u652F\u6301\u95ED\u5305</li></ul><h2 id="go-\u8BED\u8A00\u95ED\u5305\u7684\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#go-\u8BED\u8A00\u95ED\u5305\u7684\u5E94\u7528" aria-hidden="true">#</a> go \u8BED\u8A00\u95ED\u5305\u7684\u5E94\u7528</h2><h3 id="\u6590\u6CE2\u90A3\u5951\u6570\u5217" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u90A3\u5951\u6570\u5217" aria-hidden="true">#</a> \u6590\u6CE2\u90A3\u5951\u6570\u5217</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token comment">// 1, 1, 2, 3, 5, 8, 13...</span>
<span class="token comment">// 	  a, b</span>
<span class="token comment">//       a a+b</span>
<span class="token keyword">func</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	a<span class="token punctuation">,</span> b <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a<span class="token operator">+</span>b
		<span class="token keyword">return</span> a
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	f <span class="token operator">:=</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED9\u51FD\u6570\u5B9E\u73B0\u63A5\u53E3</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;bufio&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;io&quot;</span>
	<span class="token string">&quot;strings&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// 1, 1, 2, 3, 5, 8, 13...</span>
<span class="token comment">// 	  a, b</span>
<span class="token comment">//       a a+b</span>
<span class="token keyword">func</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span> intGen <span class="token punctuation">{</span>
	a<span class="token punctuation">,</span> b <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a<span class="token operator">+</span>b
		<span class="token keyword">return</span> a
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> intGen <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>g intGen<span class="token punctuation">)</span> <span class="token function">Read</span><span class="token punctuation">(</span>p <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u53D6\u5F97\u4E0B\u4E00\u4E2A\u5143\u7D20</span>
	next <span class="token operator">:=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> next <span class="token operator">&gt;</span> <span class="token number">10000</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> io<span class="token punctuation">.</span>EOF
	<span class="token punctuation">}</span>
	<span class="token comment">// \u628A\u4E0B\u4E00\u4E2A\u5143\u7D20\u5199\u8FDB p []byte</span>
	s <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span>
    <span class="token comment">// TODO: incorrect if p is too small!</span>
	<span class="token keyword">return</span> strings<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">printFileContents</span><span class="token punctuation">(</span>reader io<span class="token punctuation">.</span>Reader<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	scanner <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewScanner</span><span class="token punctuation">(</span>reader<span class="token punctuation">)</span>

	<span class="token keyword">for</span> scanner<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	f <span class="token operator">:=</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token function">printFileContents</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u51FD\u6570\u6765\u904D\u5386\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u51FD\u6570\u6765\u904D\u5386\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u4F7F\u7528\u51FD\u6570\u6765\u904D\u5386\u4E8C\u53C9\u6811</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> tree

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>node <span class="token operator">*</span>Node<span class="token punctuation">)</span> <span class="token function">Traverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	node<span class="token punctuation">.</span><span class="token function">TraverseFunc</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>n <span class="token operator">*</span>Node<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		n<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>node <span class="token operator">*</span>Node<span class="token punctuation">)</span> <span class="token function">TraverseFunc</span><span class="token punctuation">(</span>f <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token operator">*</span>Node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> node <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// \u4E2D\u5E8F\u904D\u5386 \u5DE6\u4E2D\u53F3</span>
	node<span class="token punctuation">.</span>Left<span class="token punctuation">.</span><span class="token function">TraverseFunc</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
	<span class="token function">f</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span>
	node<span class="token punctuation">.</span>Right<span class="token punctuation">.</span><span class="token function">TraverseFunc</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><span style="color:green;font-size:30px;">go \u8BED\u8A00\u95ED\u5305\u7684\u5E94\u7528</span>\uFF1A</p><ul><li>\u66F4\u4E3A\u81EA\u7136\uFF0C\u4E0D\u9700\u8981\u4FEE\u9970\u5982\u4F55\u8BBF\u95EE\u81EA\u7531\u53D8\u91CF</li><li>\u6CA1\u6709<code>Lambda</code>\u8868\u8FBE\u5F0F\uFF0C\u4F46\u662F\u6709\u533F\u540D\u51FD\u6570</li></ul><h2 id="defer-\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#defer-\u8C03\u7528" aria-hidden="true">#</a> defer \u8C03\u7528</h2><ul><li><p>\u786E\u4FDD\u8C03\u7528\u5728\u51FD\u6570\u7ED3\u675F\u65F6\u53D1\u751F</p></li><li><p>\u53C2\u6570\u5728<code>defer</code>\u8BED\u53E5\u65F6\u8BA1\u7B97</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">tryDefer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
		<span class="token keyword">if</span> i<span class="token operator">==</span> <span class="token number">30</span> <span class="token punctuation">{</span>
			<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;printed to many&quot;</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u53EA\u4F1A\u6253\u5370<code>0~30</code>\uFF0C\u56E0\u4E3A\u662F\u540E\u8FDB\u5148\u51FA\uFF0C\u6240\u4EE5\u662F\u5012\u8FC7\u6765\u7684<strong>30~0</strong></p></li><li><p><code>defer</code>\u5217\u8868\u4E3A\u540E\u8FDB\u5148\u51FA\uFF0C\u548C\u6808\u7684\u542B\u4E49\u7C7B\u4F3C</p></li></ul><blockquote><p>\u4F55\u65F6\u4F7F\u7528<code>defer</code>\u8C03\u7528</p></blockquote><ul><li><code>Open/Close</code></li><li><code>Lock/Unlock</code></li><li><code>PrintHeader/PrintFooter</code></li></ul><blockquote><p>\u5199\u6587\u4EF6\u5173\u8D44\u6E90\u6848\u4F8B\uFF1A</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	a<span class="token punctuation">,</span> b <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
		a<span class="token punctuation">,</span> b <span class="token operator">=</span> b<span class="token punctuation">,</span> a<span class="token operator">+</span>b
		<span class="token keyword">return</span> a
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">writeFile</span><span class="token punctuation">(</span>filename <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6253\u5F00\u4E00\u4E2A\u6587\u4EF6</span>
	file<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">defer</span> file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// \u5148\u5199\u5230\u5185\u5B58\u91CC</span>
	writer <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewWriter</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
	<span class="token comment">// \u5237\u5230\u786C\u76D8\u91CC</span>
	<span class="token keyword">defer</span> writer<span class="token punctuation">.</span><span class="token function">Flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	f <span class="token operator">:=</span> <span class="token function">fib</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Fprintln</span><span class="token punctuation">(</span>writer<span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570\u7C7B\u578B\u548C\u51FD\u6570\u7B7E\u540D" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7C7B\u578B\u548C\u51FD\u6570\u7B7E\u540D" aria-hidden="true">#</a> \u51FD\u6570\u7C7B\u578B\u548C\u51FD\u6570\u7B7E\u540D</h2><blockquote><p>\u53EA\u8981\u4EE5<code>type</code>\u5173\u952E\u5B57\u5F00\u5934\u7684\u90FD\u662F\u5B9A\u4E49\u7C7B\u578B\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> f <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u81EA\u5B9A\u4E49\u7C7B\u578B \u7C7B\u578B\u540D f \u5177\u4F53\u662F\u4E00\u4E2A\u51FD\u6570\u7C7B\u578B \u6CA1\u6709\u53C2\u6570\u6CA1\u6709\u8FD4\u56DE\u503C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570" aria-hidden="true">#</a> \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">f1</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u73B0\u5728\u6709\u4E00\u4E2A\u9700\u6C42\uFF0C\u4E0D\u786E\u5B9A\uFF0C\u8FD9\u4E2A\u51FD\u6570\u662F\u60F3\u8981\u76F8\u52A0\u8FD8\u662F\u76F8\u51CF\uFF0C\u6216\u8005\u76F8\u4E58\uFF1A</p><p>\u5171\u6027\uFF1A\u90FD\u662F\u4E24\u4E2A\u53C2\u6570</p><p>\u89E3\u51B3\uFF1A\u628A\u5177\u4F53\u8981\u505A\u4EC0\u4E48\u4E8B\uFF0C\u8BA9\u8C03\u7528\u65B9\u81EA\u5DF1\u51B3\u5B9A</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">f1</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">,</span> op <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    res <span class="token operator">:=</span> <span class="token function">op</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5D4C\u5165\u7684\u6BD4\u8F83\u9EBB\u70E6\uFF0C\u770B\u4E0D\u61C2\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u5D4C\u5165\u7684\u51FD\u6570\u53C2\u6570\u62FF\u51FA\u6765\uFF0C\u4F7F\u7528\u51FD\u6570\u7B7E\u540D\u6765\u4EE3\u66FF\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> calcuation <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token function">f1</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">,</span> op calcuation<span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    res <span class="token operator">:=</span> <span class="token function">op</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">f1</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> add<span class="token punctuation">)</span> <span class="token comment">// \u628A\u51FD\u6570\u5F53\u6210\u53C2\u6570\u4F20\u9012\u8FDB\u6765</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C" aria-hidden="true">#</a> \u51FD\u6570\u4F5C\u4E3A\u8FD4\u56DE\u503C</h2><p>\u51FD\u6570\u4E5F\u53EF\u4EE5\u4F5C\u4E3A\u8FD4\u56DE\u503C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">switch</span> s <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token string">&quot;+&quot;</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> add<span class="token punctuation">,</span> <span class="token boolean">nil</span>
	<span class="token keyword">case</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> sub<span class="token punctuation">,</span> <span class="token boolean">nil</span>
	<span class="token keyword">default</span><span class="token punctuation">:</span>
		err <span class="token operator">:=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;\u65E0\u6CD5\u8BC6\u522B\u7684\u64CD\u4F5C\u7B26&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u60F3\u6700\u540E\u5177\u4F53\u8FD4\u56DE\u70B9\u4EC0\u4E48\u53EF\u4EE5\u8FD9\u4E48\u5199</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">,</span> s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>res <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">switch</span> s <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token string">&quot;+&quot;</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> add
	<span class="token keyword">case</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">:</span>
		<span class="token keyword">return</span> sub
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u4E8E\u662F\u63D0\u524D\u58F0\u660E\u4E86\u4E00\u4E2A\u8FD4\u56DE\u7684\u503C\uFF0C\u76F8\u5F53\u4E8E\u4EE3\u7801\u91CC\u63D0\u524D\u58F0\u660E\u4E86\uFF1A<code>var res func(int, int) int</code>\uFF0C\u6B64\u65F6<code>res = nil</code>\uFF0C\u8FD9\u4E2A\u5C31\u662F\u547D\u540D\u8FD4\u56DE\u503C</p><blockquote><p>\u542B\u4E49\u6709\u8FD9\u4E48\u51E0\u4E2A\uFF1A</p></blockquote><ol><li>\u51FD\u6570\u5185\u90E8\u58F0\u660E\u4E86\u53D8\u91CF</li><li>\u8FD4\u56DE\u503C\u662F<code>res</code></li><li>\u5982\u679C<code>return</code>\u540E\u9762\u4E0D\u5E26\u4EC0\u4E48\uFF0C\u9ED8\u8BA4\u5C31\u662F\u8FD4\u56DE<code>res</code></li></ol><h2 id="\u5E38\u7528\u5185\u7F6E\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u5185\u7F6E\u51FD\u6570" aria-hidden="true">#</a> \u5E38\u7528\u5185\u7F6E\u51FD\u6570</h2><table><thead><tr><th style="text-align:center;">\u5185\u7F6E\u51FD\u6570</th><th style="text-align:center;">\u4ECB\u7ECD</th></tr></thead><tbody><tr><td style="text-align:center;">close</td><td style="text-align:center;">\u4E3B\u8981\u7528\u6765\u5173\u95ED<code>channel</code></td></tr><tr><td style="text-align:center;">len</td><td style="text-align:center;">\u7528\u6765\u6C42\u957F\u5EA6\uFF0C\u6BD4\u5982<code>string, array, slice, map, channel</code></td></tr><tr><td style="text-align:center;">new</td><td style="text-align:center;">\u7528\u6765\u5206\u914D\u5185\u5B58\uFF0C\u4E3B\u8981\u7528\u6765\u5206\u914D\u503C\u7C7B\u578B\uFF0C\u6BD4\u5982<code>int, struct</code>\uFF0C\u8FD4\u56DE\u7684\u662F\u6307\u9488</td></tr><tr><td style="text-align:center;">make</td><td style="text-align:center;">\u7528\u6765\u5206\u914D\u5185\u5B58\uFF0C\u4E3B\u8981\u7528\u6765\u5206\u914D\u5F15\u7528\u7C7B\u578B\uFF0C\u6BD4\u5982<code>chan, map, slice</code></td></tr><tr><td style="text-align:center;">append</td><td style="text-align:center;">\u7528\u6765\u8FFD\u52A0\u5143\u7D20\u5230\u6570\u7EC4\u3001<code>slice</code>\u4E2D</td></tr><tr><td style="text-align:center;">panic \u548C recover</td><td style="text-align:center;">\u7528\u6765\u505A\u9519\u8BEF\u5904\u7406</td></tr></tbody></table><blockquote><p><code>panic/recover</code></p></blockquote><p>Go \u8BED\u8A00\u76EE\u524D\u662F\u6CA1\u6709\u5F02\u5E38\u673A\u5236\u7684\uFF0C\u4F46\u662F\u4F7F\u7528<code>panic/recover</code>\u6A21\u5F0F\u6765\u5904\u7406\u9519\u8BEF\u3002<code>panic</code>\u53EF\u4EE5\u5728\u4EFB\u610F\u5730\u65B9\u5F15\u53D1\uFF0C\u4F46<code>recover</code>\u53EA\u6709\u5728<code>defer</code>\u8C03\u7528\u7684\u51FD\u6570\u4E2D\u6709\u6548\u3002\u5148\u770B\u4E00\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;funcA&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">funcB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;funcB&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">funC</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;funC&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">funcA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">funcB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token function">funC</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5C1D\u8BD5\u6062\u590D\u5D29\u6E83\u7684\u73B0\u573A</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> m <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span>
	m<span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">// panic \u7A0B\u5E8F\u5C31\u5D29\u4E86</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7F8E\u597D\u7684\u5468\u672B\u8981\u7ED3\u675F\u4E86&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>assignment to entry <span class="token keyword">in</span> nil map
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0D\u4F1A\u5230\u6253\u5370\u7684\u8BED\u53E5\u7684\u5730\u65B9\u3002</p><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><ol><li><code>recover()</code>\u5FC5\u987B\u642D\u914D<code>defer</code>\u4F7F\u7528</li><li><code>defer</code>\u4E00\u5B9A\u8981\u5728\u53EF\u80FD\u5F15\u53D1<code>panic</code>\u7684\u8BED\u53E5\u4E4B\u524D\u5B9A\u4E49</li></ol></div>`,60),c=[e];function o(i,l){return s(),a("div",null,c)}var r=n(p,[["render",o],["__file","go-method.html.vue"]]);export{r as default};
